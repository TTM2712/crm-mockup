{"version":3,"file":"static/js/764.2619be8f.chunk.js","mappings":"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","sources":["pages/Dashboard/components/DynamicKPIStats.tsx","pages/Dashboard/components/TrendingInsightsPredictions.tsx","pages/Dashboard/components/DynamicCharts.tsx","pages/Dashboard/components/SavedReports.tsx","services/globalAISearch/index.ts","pages/Dashboard/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Chip,\n  LinearProgress,\n  useTheme,\n  alpha,\n  Skeleton,\n  IconButton,\n  Tooltip,\n  Fade,\n  Grid,\n  Stack\n} from '@mui/material';\nimport {\n  TrendingUp as TrendingUpIcon,\n  TrendingDown as TrendingDownIcon,\n  People as PeopleIcon,\n  AttachMoney as MoneyIcon,\n  Assignment as DealsIcon,\n  Timeline as TimelineIcon,\n  Refresh as RefreshIcon,\n  Star as StarIcon,\n  ViewModule as ViewModuleIcon,\n  ViewCarousel as ViewCarouselIcon\n} from '@mui/icons-material';\nimport { aiOrchestrator, AIRequest } from '../../../services/aiOrchestration';\n\ninterface KPIData {\n  id: string;\n  title: string;\n  value: string | number;\n  change: number;\n  changeLabel: string;\n  icon: React.ReactNode;\n  color: string;\n  description: string;\n  isLoading?: boolean;\n  lastUpdated?: Date;\n}\n\ninterface DynamicUpdate {\n  id: string;\n  title: string;\n  description: string;\n  timestamp: Date;\n  type: 'new_customer' | 'deal_closed' | 'revenue_milestone' | 'market_trend';\n  value?: string;\n  isNew?: boolean;\n}\n\nconst DynamicKPIStats: React.FC = () => {\n  const theme = useTheme();\n  const [kpiData, setKpiData] = useState<KPIData[]>([]);\n  const [dynamicUpdates, setDynamicUpdates] = useState<DynamicUpdate[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastRefresh, setLastRefresh] = useState<Date>(new Date());\n  const [activeKpiIndex, setActiveKpiIndex] = useState<number>(0);\n  const [showAllKpis, setShowAllKpis] = useState<boolean>(false);\n\n  // Initialize KPI data\n  useEffect(() => {\n    loadKPIData();\n    loadDynamicUpdates();\n    \n    // Set up real-time updates\n    const interval = setInterval(() => {\n      updateKPIData();\n      addRandomUpdate();\n    }, 30000); // Update every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Rotate through KPI cards with animation\n  useEffect(() => {\n    if (kpiData.length === 0 || showAllKpis) return;\n    \n    const rotationInterval = setInterval(() => {\n      setActiveKpiIndex(prevIndex => (prevIndex + 1) % kpiData.length);\n    }, 5000); // Rotate every 5 seconds\n    \n    return () => clearInterval(rotationInterval);\n  }, [kpiData.length, showAllKpis]);\n\n  const loadKPIData = async () => {\n    setIsLoading(true);\n    \n    // Simulate API call to get real-time data\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    const currentDate = new Date();\n    const kpis: KPIData[] = [\n      {\n        id: 'new_customers',\n        title: 'Khách hàng mới',\n        value: Math.floor(Math.random() * 20) + 15, // 15-35\n        change: Math.random() * 30 - 10, // -10% to +20%\n        changeLabel: 'so với tuần trước',\n        icon: <PeopleIcon />,\n        color: theme.palette.primary.main,\n        description: 'Khách hàng mới đăng ký trong tuần',\n        lastUpdated: currentDate\n      },\n      {\n        id: 'total_deals',\n        title: 'Tổng Deal',\n        value: Math.floor(Math.random() * 50) + 120, // 120-170\n        change: Math.random() * 25 - 5, // -5% to +20%\n        changeLabel: 'so với tháng trước',\n        icon: <DealsIcon />,\n        color: theme.palette.success.main,\n        description: 'Tổng số deal đang theo dõi',\n        lastUpdated: currentDate\n      },\n      {\n        id: 'revenue',\n        title: 'Doanh thu thực tế',\n        value: `${(Math.random() * 500 + 1500).toFixed(0)}K`,\n        change: Math.random() * 40 - 10, // -10% to +30%\n        changeLabel: 'so với tháng trước',\n        icon: <MoneyIcon />,\n        color: theme.palette.warning.main,\n        description: 'Doanh thu đã thực hiện trong tháng',\n        lastUpdated: currentDate\n      },\n      {\n        id: 'deal_pipeline',\n        title: 'Deal theo giai đoạn',\n        value: `${Math.floor(Math.random() * 10) + 25}`,\n        change: Math.random() * 20 - 5, // -5% to +15%\n        changeLabel: 'deal đang closing',\n        icon: <TimelineIcon />,\n        color: theme.palette.info.main,\n        description: 'Deal đang ở giai đoạn cuối',\n        lastUpdated: currentDate\n      },\n      {\n        id: 'top_performer',\n        title: 'Nhân viên top deal',\n        value: 'Nguyễn Văn A',\n        change: 8, // Number of deals\n        changeLabel: 'deal trong tháng',\n        icon: <StarIcon />,\n        color: theme.palette.secondary.main,\n        description: 'Nhân viên có hiệu suất cao nhất',\n        lastUpdated: currentDate\n      }\n    ];\n\n    setKpiData(kpis);\n    setIsLoading(false);\n  };\n\n  const loadDynamicUpdates = async () => {\n    // Simulate loading dynamic updates similar to Crunchbase\n    const updates: DynamicUpdate[] = [\n      {\n        id: 'update_1',\n        title: 'Deal mới được tạo',\n        description: 'Hệ thống ERP cho Công ty ABC - Giá trị: 250K',\n        timestamp: new Date(Date.now() - 5 * 60 * 1000), // 5 minutes ago\n        type: 'deal_closed',\n        value: '250K',\n        isNew: true\n      },\n      {\n        id: 'update_2',\n        title: 'Khách hàng mới đăng ký',\n        description: 'XYZ Corporation đã đăng ký dịch vụ',\n        timestamp: new Date(Date.now() - 15 * 60 * 1000), // 15 minutes ago\n        type: 'new_customer',\n        isNew: true\n      },\n      {\n        id: 'update_3',\n        title: 'Xu hướng thị trường',\n        description: 'AI/ML solutions tăng trưởng 35% trong quý',\n        timestamp: new Date(Date.now() - 30 * 60 * 1000), // 30 minutes ago\n        type: 'market_trend'\n      }\n    ];\n\n    setDynamicUpdates(updates);\n  };\n\n  const updateKPIData = async () => {\n    // Simulate real-time KPI updates\n    setKpiData(prev => prev.map(kpi => ({\n      ...kpi,\n      value: kpi.id === 'new_customers' \n        ? Math.floor(Math.random() * 20) + 15\n        : kpi.id === 'total_deals'\n        ? Math.floor(Math.random() * 50) + 120\n        : kpi.id === 'revenue'\n        ? `${(Math.random() * 500 + 1500).toFixed(0)}K`\n        : kpi.value,\n      change: Math.random() * 30 - 10,\n      lastUpdated: new Date()\n    })));\n    \n    setLastRefresh(new Date());\n  };\n\n  const addRandomUpdate = () => {\n    const newUpdates = [\n      {\n        title: 'Deal được cập nhật',\n        description: 'Deal CRM System chuyển sang giai đoạn Negotiation',\n        type: 'deal_closed' as const\n      },\n      {\n        title: 'Khách hàng mới',\n        description: 'Tech Startup DEF đã quan tâm đến dịch vụ',\n        type: 'new_customer' as const\n      },\n      {\n        title: 'Cột mốc doanh thu',\n        description: 'Đạt 2M doanh thu trong tháng này',\n        type: 'revenue_milestone' as const,\n        value: '2M'\n      }\n    ];\n\n    const randomUpdate = newUpdates[Math.floor(Math.random() * newUpdates.length)];\n    \n    const update: DynamicUpdate = {\n      id: `update_${Date.now()}`,\n      title: randomUpdate.title,\n      description: randomUpdate.description,\n      timestamp: new Date(),\n      type: randomUpdate.type,\n      value: randomUpdate.value,\n      isNew: true\n    };\n\n    setDynamicUpdates(prev => [update, ...prev.slice(0, 9)]); // Keep only 10 latest\n    \n    // Remove \"new\" flag after 10 seconds\n    setTimeout(() => {\n      setDynamicUpdates(prev => \n        prev.map(u => u.id === update.id ? { ...u, isNew: false } : u)\n      );\n    }, 10000);\n  };\n\n  const handleRefresh = async () => {\n    await updateKPIData();\n    addRandomUpdate();\n  };\n\n  const getChangeColor = (change: number) => {\n    if (change > 0) return theme.palette.success.main;\n    if (change < 0) return theme.palette.error.main;\n    return theme.palette.text.secondary;\n  };\n\n  const getChangeIcon = (change: number) => {\n    if (change > 0) return <TrendingUpIcon sx={{ fontSize: 16 }} />;\n    if (change < 0) return <TrendingDownIcon sx={{ fontSize: 16 }} />;\n    return null;\n  };\n\n  const formatTimeAgo = (date: Date) => {\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMins = Math.floor(diffMs / 60000);\n    const diffHours = Math.floor(diffMs / 3600000);\n    \n    if (diffMins < 1) return 'vừa xong';\n    if (diffMins < 60) return `${diffMins} phút trước`;\n    if (diffHours < 24) return `${diffHours} giờ trước`;\n    return date.toLocaleDateString('vi-VN');\n  };\n\n  return (\n    <Box sx={{ mb: 4 }}>\n      {/* Header similar to Crunchbase */}\n      <Box sx={{ \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'space-between',\n        mb: 3 \n      }}>\n        <Box>\n          <Typography variant=\"h5\" sx={{ fontWeight: 'bold', color: 'text.primary' }}>\n            THÁNG NÀY TRÊN CRM\n          </Typography>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 1 }}>\n            <Chip \n              label={`${dynamicUpdates.length} cập nhật mới`}\n              size=\"small\"\n              sx={{ \n                backgroundColor: alpha(theme.palette.primary.main, 0.1),\n                color: theme.palette.primary.main,\n                fontWeight: 'bold'\n              }}\n            />\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              Cập nhật lần cuối: {formatTimeAgo(lastRefresh)}\n            </Typography>\n          </Box>\n        </Box>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <Tooltip title={showAllKpis ? \"Hiển thị luân phiên\" : \"Hiển thị tất cả\"}>\n            <IconButton \n              size=\"small\" \n              onClick={() => setShowAllKpis(!showAllKpis)}\n            >\n              {showAllKpis ? <ViewCarouselIcon /> : <ViewModuleIcon />}\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Làm mới dữ liệu\">\n            <IconButton onClick={handleRefresh} color=\"primary\">\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n\n      {/* KPI Stats Grid */}\n      <Box sx={{ position: 'relative', minHeight: 180, mb: 4 }}>\n        <Box sx={{ \n          display: showAllKpis ? 'grid' : 'block',\n          gridTemplateColumns: {\n            xs: '1fr',\n            sm: 'repeat(2, 1fr)',\n            md: 'repeat(5, 1fr)'\n          },\n          gap: 3,\n          position: 'relative',\n          minHeight: 150\n        }}>\n          {kpiData.map((kpi, index) => (\n            <Fade \n              key={kpi.id}\n              in={showAllKpis || activeKpiIndex === index} \n              timeout={{ enter: 500, exit: 300 }}\n              style={{\n                display: (!showAllKpis && activeKpiIndex !== index) ? 'none' : 'block',\n                transitionDelay: showAllKpis ? `${index * 100}ms` : '0ms'\n              }}\n            >\n              <Paper\n                elevation={2}\n                sx={{\n                  p: 2.5,\n                  height: '100%',\n                  borderRadius: 2,\n                  background: `linear-gradient(135deg, ${alpha(kpi.color, 0.05)} 0%, ${alpha(kpi.color, 0.02)} 100%)`,\n                  border: `1px solid ${alpha(kpi.color, 0.1)}`,\n                  transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)',\n                  position: !showAllKpis ? 'absolute' : 'relative',\n                  top: 0,\n                  left: 0,\n                  width: !showAllKpis ? '100%' : 'auto',\n                  zIndex: !showAllKpis && activeKpiIndex === index ? 2 : 1,\n                  '&:hover': {\n                    transform: 'translateY(-2px)',\n                    boxShadow: `0 8px 25px ${alpha(kpi.color, 0.15)}`\n                  }\n                }}\n              >\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\n                  <Box \n                    sx={{ \n                      display: 'flex', \n                      alignItems: 'center', \n                      p: 1, \n                      borderRadius: 1,\n                      backgroundColor: alpha(kpi.color, 0.1)\n                    }}\n                  >\n                    <Box sx={{ color: kpi.color }}>\n                      {kpi.icon}\n                    </Box>\n                  </Box>\n                  <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', color: kpi.color }}>\n                    {kpi.title}\n                  </Typography>\n                </Box>\n                \n                {isLoading ? (\n                  <Skeleton variant=\"rectangular\" width=\"100%\" height={40} />\n                ) : (\n                  <Typography variant=\"h4\" sx={{ fontWeight: 'bold', mb: 1, color: 'text.primary' }}>\n                    {kpi.value}\n                  </Typography>\n                )}\n\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n                  {getChangeIcon(kpi.change)}\n                  <Typography\n                    variant=\"caption\"\n                    sx={{\n                      color: getChangeColor(kpi.change),\n                      fontWeight: 'medium'\n                    }}\n                  >\n                    {kpi.change > 0 ? '+' : ''}{kpi.change.toFixed(1)}%\n                  </Typography>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    {kpi.changeLabel}\n                  </Typography>\n                </Box>\n\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, display: 'block' }}>\n                  {kpi.description}\n                </Typography>\n              </Paper>\n            </Fade>\n          ))}\n        </Box>\n      </Box>\n\n      {/* Dynamic Updates Section - Similar to Crunchbase activity feed */}\n      <Paper\n        elevation={1}\n        sx={{\n          borderRadius: 2,\n          overflow: 'hidden',\n          border: `1px solid ${theme.palette.divider}`\n        }}\n      >\n        <Box\n          sx={{\n            p: 2,\n            backgroundColor: alpha(theme.palette.primary.main, 0.05),\n            borderBottom: `1px solid ${theme.palette.divider}`\n          }}\n        >\n          <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\n            🔥 Hoạt động gần đây\n          </Typography>\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            Cập nhật theo thời gian thực từ hệ thống\n          </Typography>\n        </Box>\n\n        <Box sx={{ maxHeight: 300, overflow: 'auto' }}>\n          {dynamicUpdates.map((update, index) => (\n            <Box\n              key={update.id}\n              sx={{\n                p: 2,\n                borderBottom: index < dynamicUpdates.length - 1 ? `1px solid ${theme.palette.divider}` : 'none',\n                backgroundColor: update.isNew ? alpha(theme.palette.success.main, 0.05) : 'transparent',\n                transition: 'all 0.3s ease',\n                '&:hover': {\n                  backgroundColor: alpha(theme.palette.action.hover, 0.5)\n                }\n              }}\n            >\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n                <Box sx={{ flex: 1 }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 0.5 }}>\n                    <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold' }}>\n                      {update.title}\n                    </Typography>\n                    {update.isNew && (\n                      <Chip\n                        label=\"MỚI\"\n                        size=\"small\"\n                        sx={{\n                          height: 18,\n                          fontSize: '0.7rem',\n                          backgroundColor: theme.palette.success.main,\n                          color: 'white'\n                        }}\n                      />\n                    )}\n                    {update.value && (\n                      <Chip\n                        label={update.value}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        sx={{ height: 18, fontSize: '0.7rem' }}\n                      />\n                    )}\n                  </Box>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {update.description}\n                  </Typography>\n                </Box>\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 2 }}>\n                  {formatTimeAgo(update.timestamp)}\n                </Typography>\n              </Box>\n            </Box>\n          ))}\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default DynamicKPIStats;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Chip,\n  Card,\n  CardContent,\n  LinearProgress,\n  useTheme,\n  alpha,\n  Tab,\n  Tabs,\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Divider,\n  IconButton,\n  Tooltip\n} from '@mui/material';\nimport {\n  TrendingUp as TrendingUpIcon,\n  Psychology as PsychologyIcon,\n  Timeline as TimelineIcon,\n  Lightbulb as LightbulbIcon,\n  ShowChart as ShowChartIcon,\n  AttachMoney as MoneyIcon,\n  People as PeopleIcon,\n  Business as BusinessIcon,\n  Refresh as RefreshIcon,\n  Star as StarIcon,\n  ArrowUpward as ArrowUpIcon,\n  ArrowDownward as ArrowDownIcon\n} from '@mui/icons-material';\nimport { aiOrchestrator, AIRequest } from '../../../services/aiOrchestration';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\ninterface TrendingItem {\n  id: string;\n  title: string;\n  description: string;\n  growth: string;\n  confidence: number;\n  category: 'market' | 'technology' | 'industry';\n  icon: React.ReactNode;\n  color: string;\n}\n\ninterface InsightItem {\n  id: string;\n  title: string;\n  description: string;\n  impact: 'high' | 'medium' | 'low';\n  actionable: boolean;\n  source: string;\n  timestamp: Date;\n}\n\ninterface PredictionItem {\n  id: string;\n  title: string;\n  description: string;\n  probability: number;\n  timeframe: string;\n  value?: string;\n  type: 'deal' | 'market' | 'customer' | 'revenue';\n  riskLevel: 'low' | 'medium' | 'high';\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ pt: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nconst TrendingInsightsPredictions: React.FC = () => {\n  const theme = useTheme();\n  const [tabValue, setTabValue] = useState(0);\n  const [trendingData, setTrendingData] = useState<TrendingItem[]>([]);\n  const [insightsData, setInsightsData] = useState<InsightItem[]>([]);\n  const [predictionsData, setPredictionsData] = useState<PredictionItem[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadAllData();\n    \n    // Auto refresh every 2 minutes\n    const interval = setInterval(loadAllData, 120000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const loadAllData = async () => {\n    setIsLoading(true);\n    \n    try {\n      // Load trending data\n      const trendingRequest: AIRequest = {\n        id: `trending_${Date.now()}`,\n        type: 'market_analysis',\n        data: { type: 'trending' },\n        timestamp: new Date()\n      };\n      \n      const trendingResponse = await aiOrchestrator.processRequest(trendingRequest);\n      setTrendingData(generateTrendingData(trendingResponse.result));\n\n      // Load insights data\n      const insightsRequest: AIRequest = {\n        id: `insights_${Date.now()}`,\n        type: 'market_analysis',\n        data: { type: 'insights' },\n        timestamp: new Date()\n      };\n      \n      const insightsResponse = await aiOrchestrator.processRequest(insightsRequest);\n      setInsightsData(generateInsightsData(insightsResponse.result));\n\n      // Load predictions data\n      const predictionsRequest: AIRequest = {\n        id: `predictions_${Date.now()}`,\n        type: 'deal_prediction',\n        data: { type: 'predictions' },\n        timestamp: new Date()\n      };\n      \n      const predictionsResponse = await aiOrchestrator.processRequest(predictionsRequest);\n      setPredictionsData(generatePredictionsData(predictionsResponse.result));\n      \n    } catch (error) {\n      console.error('Error loading data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const generateTrendingData = (aiResult: any): TrendingItem[] => {\n    const trends = aiResult?.trends || [];\n    \n    const defaultTrends: TrendingItem[] = [\n      {\n        id: 'cloud-computing',\n        title: 'Cloud Computing',\n        description: 'Doanh nghiệp SME đang chuyển đổi sang cloud với tốc độ kỷ lục',\n        growth: '+25%',\n        confidence: 0.92,\n        category: 'technology',\n        icon: <ShowChartIcon />,\n        color: theme.palette.primary.main\n      },\n      {\n        id: 'ai-solutions',\n        title: 'AI/ML Solutions',\n        description: 'Nhu cầu về giải pháp AI tăng vượt bậc trong các doanh nghiệp',\n        growth: '+35%',\n        confidence: 0.88,\n        category: 'technology',\n        icon: <PsychologyIcon />,\n        color: theme.palette.secondary.main\n      },\n      {\n        id: 'cybersecurity',\n        title: 'Cybersecurity',\n        description: 'An ninh mạng trở thành ưu tiên hàng đầu sau các vụ tấn công',\n        growth: '+18%',\n        confidence: 0.85,\n        category: 'technology',\n        icon: <BusinessIcon />,\n        color: theme.palette.warning.main\n      },\n      {\n        id: 'digital-transformation',\n        title: 'Digital Transformation',\n        description: 'Chuyển đổi số được đẩy mạnh trong mọi ngành nghề',\n        growth: '+22%',\n        confidence: 0.90,\n        category: 'industry',\n        icon: <TrendingUpIcon />,\n        color: theme.palette.success.main\n      }\n    ];\n\n    // Merge AI data with default data\n    return trends.length > 0 ? trends.map((trend: any, index: number) => ({\n      ...defaultTrends[index % defaultTrends.length],\n      title: trend.name || defaultTrends[index % defaultTrends.length].title,\n      growth: trend.growth || defaultTrends[index % defaultTrends.length].growth,\n      confidence: trend.confidence || defaultTrends[index % defaultTrends.length].confidence\n    })) : defaultTrends;\n  };\n\n  const generateInsightsData = (aiResult: any): InsightItem[] => {\n    const insights = aiResult?.insights || [];\n    \n    const defaultInsights: InsightItem[] = [\n      {\n        id: 'market-growth',\n        title: 'Thị trường công nghệ Q4 tăng trưởng mạnh',\n        description: 'Doanh thu từ các dự án công nghệ tăng 28% so với Q3, chủ yếu từ segment AI và Cloud',\n        impact: 'high',\n        actionable: true,\n        source: 'Market Analysis AI',\n        timestamp: new Date()\n      },\n      {\n        id: 'customer-behavior',\n        title: 'Hành vi khách hàng thay đổi',\n        description: 'Khách hàng SME có xu hướng đầu tư vào giải pháp tích hợp thay vì từng sản phẩm riêng lẻ',\n        impact: 'medium',\n        actionable: true,\n        source: 'Customer Analytics',\n        timestamp: new Date(Date.now() - 30 * 60 * 1000)\n      },\n      {\n        id: 'competitive-landscape',\n        title: 'Cảnh quan cạnh tranh thay đổi',\n        description: 'Các đối thủ đang tập trung vào pricing strategy, cần điều chỉnh chiến lược giá',\n        impact: 'high',\n        actionable: true,\n        source: 'Competitive Intelligence',\n        timestamp: new Date(Date.now() - 60 * 60 * 1000)\n      },\n      {\n        id: 'technology-adoption',\n        title: 'Tốc độ áp dụng công nghệ tăng',\n        description: 'Thời gian từ demo đến quyết định mua giảm 40%, khách hàng quyết định nhanh hơn',\n        impact: 'medium',\n        actionable: false,\n        source: 'Sales Analytics',\n        timestamp: new Date(Date.now() - 90 * 60 * 1000)\n      }\n    ];\n\n    return insights.length > 0 ? insights.map((insight: string, index: number) => ({\n      ...defaultInsights[index % defaultInsights.length],\n      description: insight\n    })) : defaultInsights;\n  };\n\n  const generatePredictionsData = (aiResult: any): PredictionItem[] => {\n    const predictions = aiResult?.topDeals || [];\n    \n    const defaultPredictions: PredictionItem[] = [\n      {\n        id: 'deal-abc-corp',\n        title: 'Deal ABC Corp - ERP System',\n        description: 'Dự án triển khai hệ thống ERP cho ABC Corp có xác suất thành công cao',\n        probability: 0.85,\n        timeframe: '2 tuần',\n        value: '250K',\n        type: 'deal',\n        riskLevel: 'low'\n      },\n      {\n        id: 'market-ai-growth',\n        title: 'Thị trường AI sẽ bùng nổ',\n        description: 'Dự đoán thị trường AI/ML sẽ tăng trưởng 40% trong 6 tháng tới',\n        probability: 0.78,\n        timeframe: '6 tháng',\n        type: 'market',\n        riskLevel: 'medium'\n      },\n      {\n        id: 'customer-xyz-expansion',\n        title: 'Khách hàng XYZ mở rộng',\n        description: 'XYZ Ltd có khả năng cao sẽ mua thêm module CRM trong Q1 năm sau',\n        probability: 0.72,\n        timeframe: '3 tháng',\n        value: '180K',\n        type: 'customer',\n        riskLevel: 'low'\n      },\n      {\n        id: 'revenue-milestone',\n        title: 'Đạt mốc doanh thu 3M',\n        description: 'Dự đoán sẽ đạt mốc doanh thu 3M trong Q1 năm sau dựa trên pipeline hiện tại',\n        probability: 0.68,\n        timeframe: '4 tháng',\n        value: '3M',\n        type: 'revenue',\n        riskLevel: 'medium'\n      }\n    ];\n\n    return predictions.length > 0 ? predictions.map((prediction: any, index: number) => ({\n      ...defaultPredictions[index % defaultPredictions.length],\n      title: prediction.name || defaultPredictions[index % defaultPredictions.length].title,\n      probability: prediction.probability || defaultPredictions[index % defaultPredictions.length].probability,\n      value: prediction.value ? `${prediction.value}` : defaultPredictions[index % defaultPredictions.length].value\n    })) : defaultPredictions;\n  };\n\n  const getImpactColor = (impact: string) => {\n    switch (impact) {\n      case 'high': return theme.palette.error.main;\n      case 'medium': return theme.palette.warning.main;\n      case 'low': return theme.palette.success.main;\n      default: return theme.palette.text.secondary;\n    }\n  };\n\n  const getRiskColor = (risk: string) => {\n    switch (risk) {\n      case 'high': return theme.palette.error.main;\n      case 'medium': return theme.palette.warning.main;\n      case 'low': return theme.palette.success.main;\n      default: return theme.palette.text.secondary;\n    }\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case 'deal': return <MoneyIcon />;\n      case 'market': return <ShowChartIcon />;\n      case 'customer': return <PeopleIcon />;\n      case 'revenue': return <TrendingUpIcon />;\n      default: return <StarIcon />;\n    }\n  };\n\n  return (\n    <Paper elevation={2} sx={{ borderRadius: 2, overflow: 'hidden' }}>\n      {/* Header */}\n      <Box sx={{ \n        p: 3, \n        backgroundColor: alpha(theme.palette.primary.main, 0.05),\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Box>\n            <Typography variant=\"h5\" sx={{ fontWeight: 'bold', mb: 1 }}>\n              📊 Phân tích thông minh\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Trending • Insights • Predictions được hỗ trợ bởi AI\n            </Typography>\n          </Box>\n          <Tooltip title=\"Làm mới dữ liệu\">\n            <IconButton onClick={loadAllData} color=\"primary\">\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n\n      {/* Tabs */}\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs \n          value={tabValue} \n          onChange={(e, newValue) => setTabValue(newValue)}\n          sx={{ px: 3 }}\n        >\n          <Tab \n            icon={<TrendingUpIcon />} \n            label=\"Trending\" \n            iconPosition=\"start\"\n            sx={{ minHeight: 'auto', py: 2 }}\n          />\n          <Tab \n            icon={<LightbulbIcon />} \n            label=\"Insights\" \n            iconPosition=\"start\"\n            sx={{ minHeight: 'auto', py: 2 }}\n          />\n          <Tab \n            icon={<TimelineIcon />} \n            label=\"Predictions\" \n            iconPosition=\"start\"\n            sx={{ minHeight: 'auto', py: 2 }}\n          />\n        </Tabs>\n      </Box>\n\n      {/* Tab Panels */}\n      <Box sx={{ p: 3 }}>\n        {/* Trending Panel */}\n        <TabPanel value={tabValue} index={0}>\n          <Box \n            sx={{ \n              display: 'grid',\n              gridTemplateColumns: {\n                xs: '1fr',\n                sm: 'repeat(2, 1fr)'\n              },\n              gap: 2\n            }}\n          >\n            {trendingData.map((trend) => (\n              <Card \n                key={trend.id}\n                elevation={1}\n                sx={{ \n                  height: '100%',\n                  border: `1px solid ${alpha(trend.color, 0.2)}`,\n                  '&:hover': {\n                    transform: 'translateY(-2px)',\n                    boxShadow: `0 4px 20px ${alpha(trend.color, 0.15)}`\n                  },\n                  transition: 'all 0.3s ease'\n                }}\n              >\n                <CardContent>\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <Avatar\n                      sx={{\n                        backgroundColor: alpha(trend.color, 0.1),\n                        color: trend.color,\n                        mr: 2\n                      }}\n                    >\n                      {trend.icon}\n                    </Avatar>\n                    <Box sx={{ flex: 1 }}>\n                      <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\n                        {trend.title}\n                      </Typography>\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <Chip\n                          label={trend.growth}\n                          size=\"small\"\n                          icon={<ArrowUpIcon sx={{ fontSize: 14 }} />}\n                          sx={{\n                            backgroundColor: alpha(theme.palette.success.main, 0.1),\n                            color: theme.palette.success.main,\n                            fontWeight: 'bold'\n                          }}\n                        />\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          Độ tin cậy: {Math.round(trend.confidence * 100)}%\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </Box>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {trend.description}\n                  </Typography>\n                  <LinearProgress\n                    variant=\"determinate\"\n                    value={trend.confidence * 100}\n                    sx={{\n                      mt: 2,\n                      height: 6,\n                      borderRadius: 3,\n                      backgroundColor: alpha(trend.color, 0.1),\n                      '& .MuiLinearProgress-bar': {\n                        backgroundColor: trend.color,\n                        borderRadius: 3\n                      }\n                    }}\n                  />\n                </CardContent>\n              </Card>\n            ))}\n          </Box>\n        </TabPanel>\n\n        {/* Insights Panel */}\n        <TabPanel value={tabValue} index={1}>\n          <List>\n            {insightsData.map((insight, index) => (\n              <React.Fragment key={insight.id}>\n                <ListItem alignItems=\"flex-start\" sx={{ px: 0 }}>\n                  <ListItemAvatar>\n                    <Avatar\n                      sx={{\n                        backgroundColor: alpha(getImpactColor(insight.impact), 0.1),\n                        color: getImpactColor(insight.impact)\n                      }}\n                    >\n                      <LightbulbIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n                          {insight.title}\n                        </Typography>\n                        <Chip\n                          label={insight.impact.toUpperCase()}\n                          size=\"small\"\n                          sx={{\n                            backgroundColor: alpha(getImpactColor(insight.impact), 0.1),\n                            color: getImpactColor(insight.impact),\n                            fontWeight: 'bold',\n                            fontSize: '0.7rem'\n                          }}\n                        />\n                        {insight.actionable && (\n                          <Chip\n                            label=\"ACTIONABLE\"\n                            size=\"small\"\n                            sx={{\n                              backgroundColor: alpha(theme.palette.info.main, 0.1),\n                              color: theme.palette.info.main,\n                              fontSize: '0.7rem'\n                            }}\n                          />\n                        )}\n                      </Box>\n                    }\n                    secondary={\n                      <Box>\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                          {insight.description}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          Nguồn: {insight.source} • {insight.timestamp.toLocaleTimeString('vi-VN')}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                </ListItem>\n                {index < insightsData.length - 1 && <Divider variant=\"inset\" component=\"li\" />}\n              </React.Fragment>\n            ))}\n          </List>\n        </TabPanel>\n\n        {/* Predictions Panel */}\n        <TabPanel value={tabValue} index={2}>\n          <Box \n            sx={{ \n              display: 'grid',\n              gridTemplateColumns: {\n                xs: '1fr',\n                sm: 'repeat(2, 1fr)'\n              },\n              gap: 2\n            }}\n          >\n            {predictionsData.map((prediction) => (\n              <Card \n                key={prediction.id}\n                elevation={1}\n                sx={{ \n                  height: '100%',\n                  border: `1px solid ${alpha(getRiskColor(prediction.riskLevel), 0.2)}`,\n                  '&:hover': {\n                    transform: 'translateY(-2px)',\n                    boxShadow: `0 4px 20px ${alpha(getRiskColor(prediction.riskLevel), 0.15)}`\n                  },\n                  transition: 'all 0.3s ease'\n                }}\n              >\n                <CardContent>\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <Avatar\n                      sx={{\n                        backgroundColor: alpha(getRiskColor(prediction.riskLevel), 0.1),\n                        color: getRiskColor(prediction.riskLevel),\n                        mr: 2\n                      }}\n                    >\n                      {getTypeIcon(prediction.type)}\n                    </Avatar>\n                    <Box sx={{ flex: 1 }}>\n                      <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\n                        {prediction.title}\n                      </Typography>\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flexWrap: 'wrap' }}>\n                        <Chip\n                          label={`${Math.round(prediction.probability * 100)}% xác suất`}\n                          size=\"small\"\n                          sx={{\n                            backgroundColor: alpha(theme.palette.primary.main, 0.1),\n                            color: theme.palette.primary.main,\n                            fontWeight: 'bold'\n                          }}\n                        />\n                        {prediction.value && (\n                          <Chip\n                            label={prediction.value}\n                            size=\"small\"\n                            variant=\"outlined\"\n                          />\n                        )}\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {prediction.timeframe}\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </Box>\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                    {prediction.description}\n                  </Typography>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <Chip\n                      label={`Risk: ${prediction.riskLevel}`}\n                      size=\"small\"\n                      sx={{\n                        backgroundColor: alpha(getRiskColor(prediction.riskLevel), 0.1),\n                        color: getRiskColor(prediction.riskLevel),\n                        textTransform: 'capitalize'\n                      }}\n                    />\n                    <LinearProgress\n                      variant=\"determinate\"\n                      value={prediction.probability * 100}\n                      sx={{\n                        width: '60%',\n                        height: 6,\n                        borderRadius: 3,\n                        backgroundColor: alpha(theme.palette.primary.main, 0.1),\n                        '& .MuiLinearProgress-bar': {\n                          backgroundColor: theme.palette.primary.main,\n                          borderRadius: 3\n                        }\n                      }}\n                    />\n                  </Box>\n                </CardContent>\n              </Card>\n            ))}\n          </Box>\n        </TabPanel>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default TrendingInsightsPredictions;\n","import React, { useState } from 'react';\nimport { \n  Box, \n  Paper, \n  Typography, \n  ToggleButtonGroup, \n  ToggleButton,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  SelectChangeEvent\n} from '@mui/material';\nimport {\n  BarChart as BarChartIcon,\n  PieChart as PieChartIcon,\n  ShowChart as LineChartIcon,\n  TableChart as TableChartIcon\n} from '@mui/icons-material';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  LineChart,\n  Line\n} from 'recharts';\n\n// Dữ liệu mẫu cho biểu đồ doanh thu theo nhân viên\nconst REVENUE_DATA = [\n  { name: 'Nguyễn Văn A', value: 1200 },\n  { name: 'Trần Thị B', value: 950 },\n  { name: 'Lê Văn C', value: 850 },\n  { name: 'Phạm Thị D', value: 700 },\n  { name: 'Hoàng Văn E', value: 500 },\n];\n\n// Dữ liệu mẫu cho biểu đồ trạng thái deal\nconst DEAL_STATUS_DATA = [\n  { name: 'Lead', value: 45, color: '#f87171' },\n  { name: 'Báo giá', value: 32, color: '#fbbf24' },\n  { name: 'Đàm phán', value: 18, color: '#60a5fa' },\n  { name: 'Win', value: 38, color: '#34d399' },\n  { name: 'Lose', value: 23, color: '#9ca3af' },\n];\n\n// Dữ liệu mẫu cho khách hàng mới\nconst NEW_CUSTOMERS_DATA = [\n  { name: 'Hôm nay', value: 12 },\n  { name: 'Hôm qua', value: 10 },\n  { name: '2 ngày trước', value: 8 },\n  { name: '3 ngày trước', value: 15 },\n  { name: '4 ngày trước', value: 7 },\n];\n\n// Dữ liệu mẫu cho doanh thu theo tháng\nconst REVENUE_BY_MONTH_DATA = [\n  { name: 'T1', value: 800 },\n  { name: 'T2', value: 950 },\n  { name: 'T3', value: 1100 },\n  { name: 'T4', value: 1250 },\n  { name: 'T5', value: 1400 },\n  { name: 'T6', value: 1600 },\n];\n\n// Dữ liệu mẫu cho tỉ lệ chuyển đổi\nconst CONVERSION_RATE_DATA = [\n  { name: 'Chuyển đổi', value: 65, color: '#34d399' },\n  { name: 'Không chuyển đổi', value: 35, color: '#f87171' },\n];\n\n// Dữ liệu mẫu cho biểu đồ doanh thu theo tháng\nconst MONTHLY_REVENUE_DATA = [\n  { name: 'T1', value: 1200 },\n  { name: 'T2', value: 1900 },\n  { name: 'T3', value: 1500 },\n  { name: 'T4', value: 2200 },\n  { name: 'T5', value: 1800 },\n  { name: 'T6', value: 2400 },\n  { name: 'T7', value: 2100 },\n];\n\n// Màu sắc cho biểu đồ\nconst COLORS = ['#3b82f6', '#10b981', '#f59e0b', '#8b5cf6', '#ef4444'];\n\n// Loại biểu đồ\ntype ChartType = 'bar' | 'pie' | 'line' | 'table';\n\n// Loại thời gian\ntype TimeRange = 'today' | 'week' | 'month' | 'quarter' | 'year';\n\ninterface DynamicChartsProps {\n  query: string;\n}\n\nconst DynamicCharts: React.FC<DynamicChartsProps> = ({ query }) => {\n  const [chartType, setChartType] = useState<ChartType>('bar');\n  const [timeRange, setTimeRange] = useState<TimeRange>('month');\n\n  const handleChartTypeChange = (\n    event: React.MouseEvent<HTMLElement>,\n    newChartType: ChartType | null,\n  ) => {\n    if (newChartType !== null) {\n      setChartType(newChartType);\n    }\n  };\n\n  const handleTimeRangeChange = (event: SelectChangeEvent) => {\n    setTimeRange(event.target.value as TimeRange);\n  };\n\n  // Xác định loại biểu đồ và dữ liệu dựa trên query\n  const getChartTypeFromQuery = (query: string): { type: string; chartType: ChartType } => {\n    const lowercaseQuery = query.toLowerCase();\n    \n    // Khách hàng mới\n    if (lowercaseQuery.includes('khách hàng mới') || \n        (lowercaseQuery.includes('khách hàng') && lowercaseQuery.includes('mới'))) {\n      return { type: 'newCustomers', chartType: 'bar' };\n    }\n    \n    // Doanh thu theo nhân viên\n    else if (lowercaseQuery.includes('doanh thu') && lowercaseQuery.includes('nhân viên')) {\n      return { type: 'revenueByEmployee', chartType: 'bar' };\n    }\n    \n    // Trạng thái deal\n    else if ((lowercaseQuery.includes('deal') || lowercaseQuery.includes('giao dịch')) && \n             (lowercaseQuery.includes('trạng thái') || lowercaseQuery.includes('giai đoạn'))) {\n      return { type: 'dealStatus', chartType: 'pie' };\n    }\n    \n    // Doanh thu theo tháng\n    else if (lowercaseQuery.includes('doanh thu') && \n             (lowercaseQuery.includes('tháng') || lowercaseQuery.includes('thời gian'))) {\n      return { type: 'revenueByMonth', chartType: 'line' };\n    }\n    \n    // Tỉ lệ chuyển đổi\n    else if (lowercaseQuery.includes('tỉ lệ') || lowercaseQuery.includes('chuyển đổi')) {\n      return { type: 'conversionRate', chartType: 'pie' };\n    }\n    \n    // Mặc định hiển thị biểu đồ doanh thu theo nhân viên\n    return { type: 'revenueByEmployee', chartType: 'bar' };\n  };\n\n  const { type: chartDataType } = getChartTypeFromQuery(query || '');\n  \n  // Tự động cập nhật loại biểu đồ dựa trên câu hỏi nếu có query mới\n  React.useEffect(() => {\n    if (query) {\n      const { chartType: newChartType } = getChartTypeFromQuery(query);\n      setChartType(newChartType);\n    }\n  }, [query]);\n  \n  // Lấy dữ liệu phù hợp với loại biểu đồ\n  const getChartData = () => {\n    switch (chartDataType) {\n      case 'newCustomers':\n        return NEW_CUSTOMERS_DATA;\n      case 'dealStatus':\n        return DEAL_STATUS_DATA;\n      case 'revenueByMonth':\n        return REVENUE_BY_MONTH_DATA;\n      case 'conversionRate':\n        return CONVERSION_RATE_DATA;\n      case 'revenueByEmployee':\n      default:\n        return REVENUE_DATA;\n    }\n  };\n  \n  const chartData = getChartData();\n\n  // Format giá trị tiền tệ\n  const formatValue = (value: number) => {\n    return `${value} triệu`;\n  };\n\n  return (\n    <Paper elevation={2} sx={{ p: 3, borderRadius: 2, mb: 4 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\n          📈 {query ? `Kết quả cho: \"${query}\"` : 'Phân tích dữ liệu kinh doanh'}\n        </Typography>\n        \n        <Box sx={{ display: 'flex', gap: 2 }}>\n          <ToggleButtonGroup\n            size=\"small\"\n            value={chartType}\n            exclusive\n            onChange={handleChartTypeChange}\n            aria-label=\"chart type\"\n          >\n            <ToggleButton value=\"bar\" aria-label=\"bar chart\">\n              <BarChartIcon fontSize=\"small\" />\n            </ToggleButton>\n            <ToggleButton value=\"pie\" aria-label=\"pie chart\">\n              <PieChartIcon fontSize=\"small\" />\n            </ToggleButton>\n            <ToggleButton value=\"line\" aria-label=\"line chart\">\n              <LineChartIcon fontSize=\"small\" />\n            </ToggleButton>\n            <ToggleButton value=\"table\" aria-label=\"table\">\n              <TableChartIcon fontSize=\"small\" />\n            </ToggleButton>\n          </ToggleButtonGroup>\n          \n          <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n            <InputLabel id=\"time-range-label\">Thời gian</InputLabel>\n            <Select\n              labelId=\"time-range-label\"\n              id=\"time-range\"\n              value={timeRange}\n              label=\"Thời gian\"\n              onChange={handleTimeRangeChange}\n            >\n              <MenuItem value=\"today\">Hôm nay</MenuItem>\n              <MenuItem value=\"week\">Tuần này</MenuItem>\n              <MenuItem value=\"month\">Tháng này</MenuItem>\n              <MenuItem value=\"quarter\">Quý này</MenuItem>\n              <MenuItem value=\"year\">Năm nay</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n      </Box>\n\n      <Box sx={{ height: 400, width: '100%' }}>\n        {chartType === 'bar' && (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={chartDataType === 'revenueByMonth' ? MONTHLY_REVENUE_DATA : REVENUE_DATA}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip formatter={(value) => formatValue(value as number)} />\n              <Legend />\n              <Bar \n                dataKey=\"value\" \n                name={chartDataType === 'revenueByMonth' ? 'Doanh thu theo tháng' : 'Doanh thu theo nhân viên'} \n                fill=\"#3b82f6\" \n              />\n            </BarChart>\n          </ResponsiveContainer>\n        )}\n\n        {chartType === 'pie' && (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <PieChart>\n              <Pie\n                data={chartDataType === 'dealStatus' ? DEAL_STATUS_DATA : REVENUE_DATA}\n                cx=\"50%\"\n                cy=\"50%\"\n                labelLine={false}\n                outerRadius={150}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n                nameKey=\"name\"\n                label={({ name, percent }) => `${name}: ${percent ? (percent * 100).toFixed(0) : 0}%`}\n              >\n                {chartData.map((entry, index) => (\n                  <Cell \n                    key={`cell-${index}`} \n                    fill={(entry as any).color || COLORS[index % COLORS.length]} \n                  />\n                ))}\n              </Pie>\n              <Tooltip formatter={(value) => formatValue(value as number)} />\n              <Legend />\n            </PieChart>\n          </ResponsiveContainer>\n        )}\n\n        {chartType === 'line' && (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart\n              data={MONTHLY_REVENUE_DATA}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip formatter={(value) => formatValue(value as number)} />\n              <Legend />\n              <Line \n                type=\"monotone\" \n                dataKey=\"value\" \n                name=\"Doanh thu theo tháng\" \n                stroke=\"#3b82f6\" \n                activeDot={{ r: 8 }} \n              />\n            </LineChart>\n          </ResponsiveContainer>\n        )}\n\n        {chartType === 'table' && (\n          <Box sx={{ height: '100%', overflow: 'auto' }}>\n            <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n              <thead>\n                <tr style={{ borderBottom: '2px solid #e2e8f0' }}>\n                  <th style={{ padding: '12px 16px', textAlign: 'left' }}>Tên</th>\n                  <th style={{ padding: '12px 16px', textAlign: 'right' }}>Giá trị</th>\n                </tr>\n              </thead>\n              <tbody>\n                {(chartDataType === 'dealStatus' ? DEAL_STATUS_DATA : \n                  chartDataType === 'revenueByMonth' ? MONTHLY_REVENUE_DATA : REVENUE_DATA)\n                  .map((item, index) => (\n                    <tr \n                      key={index} \n                      style={{ \n                        borderBottom: '1px solid #e2e8f0',\n                        backgroundColor: index % 2 === 0 ? '#f8fafc' : 'white'\n                      }}\n                    >\n                      <td style={{ padding: '12px 16px' }}>{item.name}</td>\n                      <td style={{ padding: '12px 16px', textAlign: 'right' }}>\n                        {formatValue(item.value)}\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </Box>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default DynamicCharts;","import React, { useState } from 'react';\nimport { \n  Box, \n  Paper, \n  Typography, \n  List, \n  ListItem, \n  ListItemText, \n  ListItemSecondaryAction, \n  IconButton, \n  Divider,\n  Menu,\n  MenuItem,\n  Chip,\n  TextField,\n  InputAdornment\n} from '@mui/material';\nimport {\n  MoreVert as MoreVertIcon,\n  Download as DownloadIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  Search as SearchIcon,\n  Share as ShareIcon,\n  Favorite as FavoriteIcon,\n  FavoriteBorder as FavoriteBorderIcon\n} from '@mui/icons-material';\n\n// Dữ liệu mẫu cho các báo cáo đã lưu\nconst SAVED_REPORTS = [\n  {\n    id: 1,\n    title: 'Báo cáo doanh thu theo nhân viên Q2/2025',\n    createdAt: '2025-06-30',\n    type: 'bar',\n    favorite: true,\n    tags: ['doanh thu', 'nhân viên', 'quý 2']\n  },\n  {\n    id: 2,\n    title: 'Phân tích tỉ lệ chuyển đổi lead sang khách hàng',\n    createdAt: '2025-06-25',\n    type: 'pie',\n    favorite: false,\n    tags: ['lead', 'chuyển đổi', 'phễu bán hàng']\n  },\n  {\n    id: 3,\n    title: 'Báo cáo doanh thu theo tháng năm 2025',\n    createdAt: '2025-06-20',\n    type: 'line',\n    favorite: true,\n    tags: ['doanh thu', 'tháng', '2025']\n  },\n  {\n    id: 4,\n    title: 'Top 10 khách hàng tiềm năng tháng 6',\n    createdAt: '2025-06-15',\n    type: 'table',\n    favorite: false,\n    tags: ['khách hàng tiềm năng', 'top 10']\n  },\n  {\n    id: 5,\n    title: 'Phân tích hiệu quả chiến dịch marketing Q2',\n    createdAt: '2025-06-10',\n    type: 'bar',\n    favorite: false,\n    tags: ['marketing', 'chiến dịch', 'quý 2']\n  }\n];\n\nconst SavedReports: React.FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [selectedReportId, setSelectedReportId] = useState<number | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [favorites, setFavorites] = useState<Record<number, boolean>>(\n    SAVED_REPORTS.reduce((acc, report) => ({\n      ...acc,\n      [report.id]: report.favorite\n    }), {})\n  );\n\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>, id: number) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedReportId(id);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedReportId(null);\n  };\n\n  const handleToggleFavorite = (id: number) => {\n    setFavorites(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n\n  const getChartIcon = (type: string) => {\n    switch (type) {\n      case 'bar':\n        return '📊';\n      case 'pie':\n        return '🥧';\n      case 'line':\n        return '📈';\n      case 'table':\n        return '📋';\n      default:\n        return '📄';\n    }\n  };\n\n  const filteredReports = SAVED_REPORTS.filter(report => \n    report.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    report.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))\n  );\n\n  return (\n    <Paper elevation={2} sx={{ borderRadius: 2 }}>\n      <Box sx={{ p: 2, borderBottom: '1px solid #e2e8f0' }}>\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mb: 2 }}>\n          📑 Báo cáo đã lưu\n        </Typography>\n        \n        <TextField\n          fullWidth\n          size=\"small\"\n          placeholder=\"Tìm kiếm báo cáo...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon fontSize=\"small\" />\n              </InputAdornment>\n            ),\n          }}\n          sx={{ mb: 1 }}\n        />\n      </Box>\n\n      <List sx={{ maxHeight: '400px', overflow: 'auto' }}>\n        {filteredReports.length === 0 ? (\n          <ListItem>\n            <ListItemText \n              primary=\"Không tìm thấy báo cáo nào\" \n              secondary=\"Hãy thử tìm kiếm với từ khóa khác\" \n            />\n          </ListItem>\n        ) : (\n          filteredReports.map((report) => (\n            <React.Fragment key={report.id}>\n              <ListItem \n                sx={{ \n                  cursor: 'pointer',\n                  '&:hover': { \n                    backgroundColor: '#f8fafc' \n                  }\n                }}\n              >\n                <Box sx={{ mr: 1, fontSize: '1.5rem' }}>\n                  {getChartIcon(report.type)}\n                </Box>\n                <ListItemText\n                  primary={\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <Typography variant=\"body1\" sx={{ fontWeight: 'medium' }}>\n                        {report.title}\n                      </Typography>\n                      <IconButton \n                        size=\"small\" \n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleToggleFavorite(report.id);\n                        }}\n                        sx={{ ml: 1, color: favorites[report.id] ? '#f43f5e' : 'inherit' }}\n                      >\n                        {favorites[report.id] ? <FavoriteIcon fontSize=\"small\" /> : <FavoriteBorderIcon fontSize=\"small\" />}\n                      </IconButton>\n                    </Box>\n                  }\n                  secondary={\n                    <Box sx={{ mt: 0.5 }}>\n                      <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\n                        Tạo ngày: {report.createdAt}\n                      </Typography>\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mt: 0.5 }}>\n                        {report.tags.map((tag, idx) => (\n                          <Chip \n                            key={idx} \n                            label={tag} \n                            size=\"small\" \n                            sx={{ \n                              height: 20, \n                              fontSize: '0.65rem',\n                              backgroundColor: '#f1f5f9'\n                            }} \n                          />\n                        ))}\n                      </Box>\n                    </Box>\n                  }\n                />\n                <ListItemSecondaryAction>\n                  <IconButton \n                    edge=\"end\" \n                    onClick={(e) => handleMenuOpen(e, report.id)}\n                  >\n                    <MoreVertIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n              <Divider variant=\"inset\" component=\"li\" />\n            </React.Fragment>\n          ))\n        )}\n      </List>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n        id={`report-menu-${selectedReportId}`}\n      >\n        <MenuItem onClick={handleMenuClose}>\n          <DownloadIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Tải xuống\n        </MenuItem>\n        <MenuItem onClick={handleMenuClose}>\n          <EditIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Chỉnh sửa\n        </MenuItem>\n        <MenuItem onClick={handleMenuClose}>\n          <ShareIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Chia sẻ\n        </MenuItem>\n        <Divider />\n        <MenuItem onClick={handleMenuClose} sx={{ color: 'error.main' }}>\n          <DeleteIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Xóa\n        </MenuItem>\n      </Menu>\n    </Paper>\n  );\n};\n\nexport default SavedReports;","// Global AI Search Service\n// Thay thế tất cả bộ lọc search truyền thống bằng AI search thông minh\n\nimport { aiOrchestrator, AIRequest } from '../aiOrchestration';\n\nexport interface SearchResult {\n  id: string;\n  type: 'customer' | 'deal' | 'contact' | 'contract' | 'invoice' | 'requirement' | 'quotation';\n  title: string;\n  description: string;\n  relevanceScore: number;\n  metadata: Record<string, any>;\n  url: string;\n  timestamp: Date;\n}\n\nexport interface SearchContext {\n  currentPage: string;\n  userRole: string;\n  recentActivity: string[];\n  preferences: Record<string, any>;\n  // Additional context properties\n  contextual?: boolean;\n  quickSearch?: boolean;\n  maxResults?: number;\n}\n\nexport interface SearchFilters {\n  types?: string[];\n  dateRange?: {\n    start: Date;\n    end: Date;\n  };\n  status?: string[];\n  priority?: string[];\n  assignedTo?: string[];\n}\n\nexport class GlobalAISearchService {\n  private searchHistory: string[] = [];\n  private searchCache: Map<string, SearchResult[]> = new Map();\n  private contextData: SearchContext | null = null;\n\n  constructor() {\n    this.loadSearchHistory();\n  }\n\n  // Thiết lập context cho search\n  public setContext(context: SearchContext) {\n    this.contextData = context;\n  }\n\n  // Thực hiện AI search thông minh\n  public async search(\n    query: string, \n    filters?: SearchFilters,\n    context?: Partial<SearchContext>\n  ): Promise<SearchResult[]> {\n    // Kiểm tra cache trước\n    const cacheKey = this.generateCacheKey(query, filters);\n    if (this.searchCache.has(cacheKey)) {\n      return this.searchCache.get(cacheKey)!;\n    }\n\n    try {\n      // Chuẩn bị request cho AI Orchestrator\n      const searchRequest: AIRequest = {\n        id: `search_${Date.now()}`,\n        type: 'search',\n        data: {\n          query,\n          filters,\n          context: { ...this.contextData, ...context },\n          searchHistory: this.searchHistory.slice(-5) // 5 tìm kiếm gần nhất\n        },\n        timestamp: new Date()\n      };\n\n      // Gửi request tới AI Orchestrator\n      const response = await aiOrchestrator.processRequest(searchRequest);\n      \n      // Xử lý kết quả\n      const results = this.processSearchResults(response.result, query);\n      \n      // Lưu vào cache\n      this.searchCache.set(cacheKey, results);\n      \n      // Cập nhật lịch sử tìm kiếm\n      this.addToSearchHistory(query);\n      \n      return results;\n    } catch (error) {\n      console.error('Error in AI search:', error);\n      return this.getFallbackResults(query, filters);\n    }\n  }\n\n  // Tìm kiếm nhanh với gợi ý\n  public async quickSearch(query: string): Promise<SearchResult[]> {\n    if (query.length < 2) return [];\n    \n    return this.search(query, undefined, { \n      quickSearch: true,\n      maxResults: 5 \n    });\n  }\n\n  // Lấy gợi ý tìm kiếm thông minh\n  public async getSearchSuggestions(\n    partialQuery: string,\n    currentPage?: string\n  ): Promise<string[]> {\n    if (partialQuery.length < 2) {\n      return this.getPopularSearches(currentPage);\n    }\n\n    try {\n      const suggestionRequest: AIRequest = {\n        id: `suggestions_${Date.now()}`,\n        type: 'search',\n        data: {\n          type: 'suggestions',\n          partialQuery,\n          currentPage,\n          searchHistory: this.searchHistory\n        },\n        timestamp: new Date()\n      };\n\n      const response = await aiOrchestrator.processRequest(suggestionRequest);\n      return response.result.suggestions || [];\n    } catch (error) {\n      console.error('Error getting search suggestions:', error);\n      return this.getPopularSearches(currentPage);\n    }\n  }\n\n  // Tìm kiếm theo ngữ cảnh trang hiện tại\n  public async contextualSearch(query: string): Promise<SearchResult[]> {\n    const context = this.contextData?.currentPage || '';\n    \n    // Điều chỉnh search dựa trên trang hiện tại\n    const contextualFilters: SearchFilters = {};\n    \n    switch (context) {\n      case '/customers':\n        contextualFilters.types = ['customer', 'contact'];\n        break;\n      case '/deals':\n        contextualFilters.types = ['deal', 'quotation'];\n        break;\n      case '/contracts':\n        contextualFilters.types = ['contract', 'invoice'];\n        break;\n      default:\n        // Không giới hạn type cho trang khác\n        break;\n    }\n\n    return this.search(query, contextualFilters, { contextual: true });\n  }\n\n  // Tìm kiếm semantic (tìm theo ý nghĩa)\n  public async semanticSearch(query: string): Promise<SearchResult[]> {\n    const semanticRequest: AIRequest = {\n      id: `semantic_${Date.now()}`,\n      type: 'search',\n      data: {\n        type: 'semantic',\n        query,\n        context: this.contextData\n      },\n      timestamp: new Date()\n    };\n\n    try {\n      const response = await aiOrchestrator.processRequest(semanticRequest);\n      return this.processSearchResults(response.result, query);\n    } catch (error) {\n      console.error('Error in semantic search:', error);\n      return [];\n    }\n  }\n\n  // Xử lý kết quả search từ AI\n  private processSearchResults(aiResult: any, originalQuery: string): SearchResult[] {\n    const results = aiResult.results || [];\n    \n    return results.map((result: any, index: number) => ({\n      id: result.id || `result_${index}`,\n      type: result.type || 'customer',\n      title: result.title || result.name || 'Untitled',\n      description: result.description || result.summary || '',\n      relevanceScore: result.relevance || (1 - index * 0.1),\n      metadata: result.metadata || {},\n      url: this.generateResultUrl(result.type, result.id),\n      timestamp: new Date()\n    }));\n  }\n\n  // Tạo URL cho kết quả\n  private generateResultUrl(type: string, id: string): string {\n    const baseUrls: Record<string, string> = {\n      customer: '/customers',\n      deal: '/deals',\n      contact: '/contacts',\n      contract: '/contracts',\n      invoice: '/invoices',\n      requirement: '/requirements',\n      quotation: '/quotations'\n    };\n\n    return `${baseUrls[type] || '/'}/${id}`;\n  }\n\n  // Tạo cache key\n  private generateCacheKey(query: string, filters?: SearchFilters): string {\n    return `${query}_${JSON.stringify(filters || {})}`;\n  }\n\n  // Lấy kết quả fallback khi AI không hoạt động\n  private getFallbackResults(query: string, filters?: SearchFilters): SearchResult[] {\n    // Mô phỏng kết quả tìm kiếm cơ bản\n    const mockResults: SearchResult[] = [\n      {\n        id: '1',\n        type: 'customer',\n        title: `Khách hàng liên quan đến \"${query}\"`,\n        description: 'Kết quả tìm kiếm cơ bản',\n        relevanceScore: 0.8,\n        metadata: {},\n        url: '/customers/1',\n        timestamp: new Date()\n      }\n    ];\n\n    return mockResults;\n  }\n\n  // Lấy các tìm kiếm phổ biến\n  private getPopularSearches(currentPage?: string): string[] {\n    const popularSearches: Record<string, string[]> = {\n      '/dashboard': [\n        'Doanh thu tháng này',\n        'Deal đang pending',\n        'Khách hàng mới',\n        'Top performer'\n      ],\n      '/customers': [\n        'Khách hàng VIP',\n        'Khách hàng mới',\n        'Khách hàng chưa liên hệ',\n        'Khách hàng có deal lớn'\n      ],\n      '/deals': [\n        'Deal closing',\n        'Deal high value',\n        'Deal pending',\n        'Deal won this month'\n      ],\n      default: [\n        'Tìm kiếm nhanh',\n        'Báo cáo',\n        'Thống kê',\n        'Phân tích'\n      ]\n    };\n\n    return popularSearches[currentPage || 'default'] || popularSearches.default;\n  }\n\n  // Quản lý lịch sử tìm kiếm\n  private addToSearchHistory(query: string) {\n    if (!this.searchHistory.includes(query)) {\n      this.searchHistory.unshift(query);\n      this.searchHistory = this.searchHistory.slice(0, 20); // Giữ 20 tìm kiếm gần nhất\n      this.saveSearchHistory();\n    }\n  }\n\n  private loadSearchHistory() {\n    try {\n      const saved = localStorage.getItem('ai_search_history');\n      if (saved) {\n        this.searchHistory = JSON.parse(saved);\n      }\n    } catch (error) {\n      console.error('Error loading search history:', error);\n    }\n  }\n\n  private saveSearchHistory() {\n    try {\n      localStorage.setItem('ai_search_history', JSON.stringify(this.searchHistory));\n    } catch (error) {\n      console.error('Error saving search history:', error);\n    }\n  }\n\n  // Xóa cache\n  public clearCache() {\n    this.searchCache.clear();\n  }\n\n  // Lấy thống kê search\n  public getSearchStats() {\n    return {\n      historyCount: this.searchHistory.length,\n      cacheSize: this.searchCache.size,\n      recentSearches: this.searchHistory.slice(0, 5)\n    };\n  }\n\n  // Xuất dữ liệu search để phân tích\n  public exportSearchData() {\n    return {\n      history: this.searchHistory,\n      context: this.contextData,\n      timestamp: new Date()\n    };\n  }\n}\n\n// Export singleton instance\nexport const globalAISearch = new GlobalAISearchService();\n","import React, { useState, useEffect, useRef } from 'react';\nimport { \n  Box, \n  Typography, \n  Container, \n  useTheme, \n  alpha, \n  Fade, \n  Paper,\n  TextField,\n  IconButton,\n  InputAdornment,\n  Popper,\n  ClickAwayListener,\n  List,\n  ListItemButton,\n  ListItemText,\n  CircularProgress,\n  Zoom,\n  Slide\n} from '@mui/material';\nimport { useLocation } from 'react-router-dom';\nimport { \n  Search as SearchIcon, \n  SmartToy as AIIcon,\n  Mic as MicIcon,\n  Close as CloseIcon,\n  KeyboardArrowUp as KeyboardArrowUpIcon\n} from '@mui/icons-material';\n\n// Import các component mới\nimport DynamicKPIStats from './components/DynamicKPIStats';\nimport TrendingInsightsPredictions from './components/TrendingInsightsPredictions';\nimport DynamicCharts from './components/DynamicCharts';\nimport SavedReports from './components/SavedReports';\nimport { globalAISearch } from '../../services/globalAISearch';\n\nconst Dashboard = () => {\n  const theme = useTheme();\n  const location = useLocation();\n  const [currentQuery, setCurrentQuery] = useState<string>('');\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isMinimized, setIsMinimized] = useState<boolean>(false);\n  const [showScrollToTop, setShowScrollToTop] = useState<boolean>(false);\n  const [scrollY, setScrollY] = useState(0);\n  \n  const searchRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    // Simulate loading for smooth animation\n    const timer = setTimeout(() => setIsLoaded(true), 200);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Handle scroll to determine position\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      setScrollY(currentScrollY);\n      \n      // Always show minimized search bar when scrolling down\n      // and show full search bar at the top\n      if (currentScrollY > 200) {\n        setIsMinimized(true);\n        setShowScrollToTop(true);\n      } else {\n        setIsMinimized(false);\n        setShowScrollToTop(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Load suggestions when search is opened\n  useEffect(() => {\n    if (isSearchOpen && searchQuery.length === 0) {\n      loadSuggestions();\n    }\n  }, [isSearchOpen]);\n\n  const loadSuggestions = async () => {\n    try {\n      const suggestions = await globalAISearch.getSearchSuggestions('', location.pathname);\n      setSuggestions(suggestions);\n    } catch (error) {\n      console.error('Error loading suggestions:', error);\n    }\n  };\n\n  const handleSearch = async () => {\n    if (!searchQuery.trim()) return;\n    \n    setIsLoading(true);\n    try {\n      const results = await globalAISearch.contextualSearch(searchQuery);\n      console.log('Search results:', results);\n      // Process results as needed\n      handleGenerateReport(searchQuery);\n    } catch (error) {\n      console.error('Error searching:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    setSearchQuery(suggestion);\n    handleSearch();\n  };\n\n  const handleInputFocus = () => {\n    setIsSearchOpen(true);\n  };\n\n  const handleClickAway = () => {\n    setIsSearchOpen(false);\n  };\n\n  const handleScrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  // Xử lý khi người dùng gửi yêu cầu báo cáo mới\n  const handleGenerateReport = (query: string) => {\n    console.log('Generating report for query:', query);\n    setCurrentQuery(query);\n    // Ở đây trong thực tế sẽ gọi API để xử lý yêu cầu và tạo báo cáo\n  };\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ position: 'relative' }}>\n        <Fade in={isLoaded} timeout={800}>\n          <Box sx={{ py: 3 }}>\n            {/* Welcome Header - Crunchbase style */}\n            <Box \n              sx={{ \n                textAlign: 'center',\n                mb: 6,\n                py: 4,\n                background: `linear-gradient(135deg, ${alpha(theme.palette.primary.main, 0.05)} 0%, ${alpha(theme.palette.secondary.main, 0.05)} 100%)`,\n                borderRadius: 3,\n                border: `1px solid ${alpha(theme.palette.primary.main, 0.1)}`\n              }}\n            >\n              <Typography \n                variant=\"h3\" \n                component=\"h1\" \n                gutterBottom \n                sx={{ \n                  fontWeight: 'bold', \n                  color: theme.palette.text.primary,\n                  mb: 2\n                }}\n              >\n                Chào mừng trở lại, Admin\n              </Typography>\n              <Typography \n                variant=\"h6\" \n                color=\"text.secondary\"\n                sx={{ \n                  mb: 3,\n                  maxWidth: 600,\n                  mx: 'auto'\n                }}\n              >\n                Dashboard thông minh\n              </Typography>\n              \n              {/* AI Search Input - Crunchbase style */}\n              <ClickAwayListener onClickAway={handleClickAway}>\n                <Box \n                  ref={searchRef}\n                  sx={{\n                    position: isMinimized ? 'fixed' : 'relative',\n                    bottom: isMinimized ? 20 : 'auto',\n                    right: isMinimized ? 20 : 'auto',\n                    left: isMinimized ? 'auto' : 'auto',\n                    zIndex: 1000,\n                    width: isMinimized ? 'auto' : '100%',\n                    maxWidth: isMinimized ? 300 : 600,\n                    mx: 'auto',\n                    transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)',\n                    transform: 'translateY(0)',\n                    opacity: 1,\n                    boxShadow: isMinimized ? '0 8px 32px rgba(0,0,0,0.15)' : 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: 2\n                  }}\n                >\n                  <Zoom in={true} style={{ transitionDelay: isMinimized ? '100ms' : '0ms' }}>\n                    <Paper\n                      elevation={isMinimized ? 4 : 1}\n                      sx={{\n                        p: isMinimized ? 1 : 2,\n                        borderRadius: 8,\n                        border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}`,\n                        backgroundColor: isMinimized ? \n                          alpha(theme.palette.background.paper, 0.95) : \n                          alpha(theme.palette.background.paper, 0.8),\n                        backdropFilter: 'blur(8px)',\n                        boxShadow: isMinimized ? \n                          `0 4px 20px ${alpha(theme.palette.primary.main, 0.15)}` : \n                          'none',\n                        transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n                        '&:hover': {\n                          boxShadow: isMinimized ? \n                            `0 8px 32px ${alpha(theme.palette.primary.main, 0.25)}` : \n                            'none',\n                          transform: isMinimized ? 'translateY(-2px)' : 'none'\n                        }\n                    }}\n                  >\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <TextField\n                        inputRef={inputRef}\n                        fullWidth\n                        placeholder=\"Hỏi AI về dữ liệu kinh doanh, thị trường, khách hàng...\"\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                        onFocus={handleInputFocus}\n                        onKeyPress={(e) => {\n                          if (e.key === 'Enter') {\n                            handleSearch();\n                          }\n                        }}\n                        variant=\"outlined\"\n                        size={isMinimized ? \"small\" : \"medium\"}\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <AIIcon color=\"primary\" />\n                            </InputAdornment>\n                          ),\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              {searchQuery ? (\n                                <IconButton\n                                  size=\"small\"\n                                  onClick={() => setSearchQuery('')}\n                                  edge=\"end\"\n                                >\n                                  <CloseIcon fontSize=\"small\" />\n                                </IconButton>\n                              ) : null}\n                              {isLoading ? (\n                                <CircularProgress size={20} />\n                              ) : (\n                                <IconButton\n                                  size=\"small\"\n                                  onClick={handleSearch}\n                                  edge=\"end\"\n                                  color=\"primary\"\n                                >\n                                  <SearchIcon />\n                                </IconButton>\n                              )}\n                              <IconButton\n                                size=\"small\"\n                                edge=\"end\"\n                              >\n                                <MicIcon />\n                              </IconButton>\n                            </InputAdornment>\n                          ),\n                          sx: {\n                            borderRadius: 8,\n                            backgroundColor: alpha(theme.palette.background.paper, 0.5),\n                            fontSize: '1rem',\n                            '&:hover': {\n                              backgroundColor: alpha(theme.palette.background.paper, 0.8),\n                            },\n                            '& .MuiOutlinedInput-notchedOutline': {\n                              borderColor: alpha(theme.palette.primary.main, 0.3),\n                              borderWidth: 2,\n                            },\n                            '&:hover .MuiOutlinedInput-notchedOutline': {\n                              borderColor: alpha(theme.palette.primary.main, 0.5),\n                              borderWidth: 2,\n                            },\n                            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                              borderColor: theme.palette.primary.main,\n                              borderWidth: 2,\n                            }\n                          }\n                        }}\n                      />\n                    </Box>\n                    \n                    {/* Suggestions Dropdown */}\n                    {isSearchOpen && !isMinimized && (\n                      <Popper\n                        open={isSearchOpen}\n                        anchorEl={searchRef.current}\n                        placement=\"bottom-start\"\n                        style={{ width: searchRef.current?.clientWidth, zIndex: 1301 }}\n                      >\n                        <Paper\n                          elevation={3}\n                          sx={{\n                            mt: 1,\n                            p: 1,\n                            borderRadius: 2,\n                            maxHeight: 300,\n                            overflow: 'auto',\n                            border: `1px solid ${theme.palette.divider}`\n                          }}\n                        >\n                          <List dense>\n                            {suggestions.map((suggestion, index) => (\n                              <ListItemButton\n                                key={index}\n                                onClick={() => handleSuggestionClick(suggestion)}\n                              >\n                                <ListItemText primary={suggestion} />\n                              </ListItemButton>\n                            ))}\n                          </List>\n                        </Paper>\n                      </Popper>\n                    )}\n                    \n                    {/* Minimized Label */}\n                    {isMinimized && (\n                      <Typography \n                        variant=\"caption\" \n                        sx={{ \n                          ml: 1, \n                          color: 'text.secondary',\n                          display: { xs: 'none', sm: 'inline' }\n                        }}\n                      >\n                        AI Assistant - Hỏi bất cứ điều gì!\n                      </Typography>\n                    )}\n                  </Paper>\n                  </Zoom>\n                  \n                  {/* Scroll to top button */}\n                  <Slide direction=\"up\" in={showScrollToTop} mountOnEnter unmountOnExit>\n                    <IconButton \n                      color=\"primary\"\n                      size=\"medium\"\n                      onClick={handleScrollToTop}\n                      sx={{\n                        position: 'fixed',\n                        bottom: isMinimized ? 80 : 20,\n                        right: 20,\n                        backgroundColor: alpha(theme.palette.background.paper, 0.9),\n                        boxShadow: `0 4px 14px ${alpha(theme.palette.primary.main, 0.2)}`,\n                        border: `1px solid ${alpha(theme.palette.primary.main, 0.3)}`,\n                        '&:hover': {\n                          backgroundColor: alpha(theme.palette.background.paper, 1),\n                          boxShadow: `0 6px 20px ${alpha(theme.palette.primary.main, 0.3)}`,\n                        }\n                      }}\n                    >\n                      <KeyboardArrowUpIcon />\n                    </IconButton>\n                  </Slide>\n                </Box>\n              </ClickAwayListener>\n            </Box>\n\n            {/* Dynamic KPI Stats - Crunchbase \"THIS MONTH ON CRUNCHBASE\" style */}\n            <DynamicKPIStats />\n\n            {/* Main Content Grid */}\n            <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', lg: '2fr 1fr' }, gap: 4, mb: 4 }}>\n              {/* Left Column - Trending, Insights, Predictions */}\n              <Box>\n                <TrendingInsightsPredictions />\n              </Box>\n\n              {/* Right Column - Charts and Reports */}\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\n                {/* Dynamic Charts */}\n                <Box>\n                  <DynamicCharts query={currentQuery} />\n                </Box>\n\n                {/* Saved Reports */}\n                <Box>\n                  <SavedReports />\n                </Box>\n              </Box>\n            </Box>\n\n            {/* AI Orchestration Status */}\n            <Box \n              sx={{ \n                mt: 4, \n                p: 3, \n                backgroundColor: alpha(theme.palette.background.paper, 0.8),\n                borderRadius: 2,\n                border: `1px solid ${theme.palette.divider}`,\n                textAlign: 'center'\n              }}\n            >\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                🤖 Powered by AI Orchestration System\n              </Typography>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                Orchestrator • Pipeline • Agent • Monitoring • Dynamic Routing\n              </Typography>\n            </Box>\n\n            {/* Footer */}\n            <Box sx={{ mt: 4, pt: 2, borderTop: `1px solid ${theme.palette.divider}`, textAlign: 'center' }}>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                © 2025 CRM Dashboard - Powered by AI Orchestration • Real-time Data • Smart Predictions\n              </Typography>\n            </Box>\n          </Box>\n        </Fade>\n      </Container>\n  );\n};\n\nexport default Dashboard;\n"],"names":["DynamicKPIStats","theme","useTheme","kpiData","setKpiData","useState","dynamicUpdates","setDynamicUpdates","isLoading","setIsLoading","lastRefresh","setLastRefresh","Date","activeKpiIndex","setActiveKpiIndex","showAllKpis","setShowAllKpis","useEffect","loadKPIData","loadDynamicUpdates","interval","setInterval","updateKPIData","addRandomUpdate","clearInterval","length","rotationInterval","prevIndex","async","Promise","resolve","setTimeout","currentDate","kpis","id","title","value","Math","floor","random","change","changeLabel","icon","_jsx","PeopleIcon","color","palette","primary","main","description","lastUpdated","DealsIcon","success","concat","toFixed","MoneyIcon","warning","TimelineIcon","info","StarIcon","secondary","updates","timestamp","now","type","isNew","prev","map","kpi","_objectSpread","newUpdates","randomUpdate","update","slice","u","getChangeColor","error","text","formatTimeAgo","date","diffMs","getTime","diffMins","diffHours","toLocaleDateString","_jsxs","Box","sx","mb","children","display","alignItems","justifyContent","Typography","variant","fontWeight","gap","mt","Chip","label","size","backgroundColor","alpha","Tooltip","IconButton","onClick","ViewCarouselIcon","ViewModuleIcon","RefreshIcon","position","minHeight","gridTemplateColumns","xs","sm","md","index","Fade","in","timeout","enter","exit","style","transitionDelay","Paper","elevation","p","height","borderRadius","background","border","transition","top","left","width","zIndex","transform","boxShadow","Skeleton","TrendingUpIcon","fontSize","TrendingDownIcon","overflow","divider","borderBottom","maxHeight","action","hover","flex","ml","TabPanel","props","other","_objectWithoutProperties","_excluded","role","hidden","pt","TrendingInsightsPredictions","tabValue","setTabValue","trendingData","setTrendingData","insightsData","setInsightsData","predictionsData","setPredictionsData","loadAllData","trendingRequest","data","trendingResponse","aiOrchestrator","processRequest","generateTrendingData","result","insightsRequest","insightsResponse","generateInsightsData","predictionsRequest","predictionsResponse","generatePredictionsData","console","aiResult","trends","defaultTrends","growth","confidence","category","ShowChartIcon","PsychologyIcon","BusinessIcon","trend","name","insights","defaultInsights","impact","actionable","source","insight","predictions","topDeals","defaultPredictions","probability","timeframe","riskLevel","prediction","getImpactColor","getRiskColor","risk","getTypeIcon","borderColor","Tabs","onChange","e","newValue","px","Tab","iconPosition","py","LightbulbIcon","Card","CardContent","Avatar","mr","ArrowUpIcon","round","LinearProgress","List","React","ListItem","ListItemAvatar","ListItemText","toUpperCase","toLocaleTimeString","Divider","component","flexWrap","textTransform","REVENUE_DATA","DEAL_STATUS_DATA","NEW_CUSTOMERS_DATA","REVENUE_BY_MONTH_DATA","CONVERSION_RATE_DATA","MONTHLY_REVENUE_DATA","COLORS","_ref","query","chartType","setChartType","timeRange","setTimeRange","getChartTypeFromQuery","lowercaseQuery","toLowerCase","includes","chartDataType","newChartType","chartData","getChartData","formatValue","ToggleButtonGroup","exclusive","handleChartTypeChange","event","ToggleButton","BarChartIcon","PieChartIcon","LineChartIcon","TableChartIcon","FormControl","minWidth","InputLabel","Select","labelId","target","MenuItem","ResponsiveContainer","BarChart","margin","right","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","formatter","Legend","Bar","fill","PieChart","Pie","cx","cy","labelLine","outerRadius","nameKey","_ref2","percent","entry","Cell","LineChart","Line","stroke","activeDot","r","borderCollapse","padding","textAlign","item","SAVED_REPORTS","createdAt","favorite","tags","SavedReports","anchorEl","setAnchorEl","selectedReportId","setSelectedReportId","searchQuery","setSearchQuery","favorites","setFavorites","reduce","acc","report","handleMenuClose","getChartIcon","filteredReports","filter","some","tag","TextField","fullWidth","placeholder","InputProps","startAdornment","InputAdornment","SearchIcon","cursor","stopPropagation","FavoriteIcon","FavoriteBorderIcon","idx","ListItemSecondaryAction","edge","handleMenuOpen","currentTarget","MoreVertIcon","Menu","open","Boolean","onClose","DownloadIcon","EditIcon","ShareIcon","DeleteIcon","globalAISearch","constructor","searchHistory","searchCache","Map","contextData","this","loadSearchHistory","setContext","context","search","filters","cacheKey","generateCacheKey","has","get","searchRequest","response","results","processSearchResults","set","addToSearchHistory","getFallbackResults","quickSearch","undefined","maxResults","getSearchSuggestions","partialQuery","currentPage","getPopularSearches","suggestionRequest","suggestions","contextualSearch","_this$contextData","contextualFilters","types","contextual","semanticSearch","semanticRequest","originalQuery","summary","relevanceScore","relevance","metadata","url","generateResultUrl","customer","deal","contact","contract","invoice","requirement","quotation","JSON","stringify","popularSearches","default","unshift","saveSearchHistory","saved","localStorage","getItem","parse","setItem","clearCache","clear","getSearchStats","historyCount","cacheSize","recentSearches","exportSearchData","history","Dashboard","_searchRef$current","location","useLocation","currentQuery","setCurrentQuery","isLoaded","setIsLoaded","isSearchOpen","setIsSearchOpen","setSuggestions","isMinimized","setIsMinimized","showScrollToTop","setShowScrollToTop","scrollY","setScrollY","searchRef","useRef","inputRef","timer","clearTimeout","handleScroll","currentScrollY","window","addEventListener","removeEventListener","loadSuggestions","pathname","handleSearch","trim","log","handleGenerateReport","Container","maxWidth","gutterBottom","mx","ClickAwayListener","onClickAway","handleClickAway","ref","opacity","flexDirection","Zoom","paper","backdropFilter","onFocus","handleInputFocus","onKeyPress","key","AIIcon","endAdornment","CloseIcon","CircularProgress","MicIcon","borderWidth","Popper","current","placement","clientWidth","dense","suggestion","ListItemButton","handleSuggestionClick","Slide","direction","mountOnEnter","unmountOnExit","handleScrollToTop","scrollTo","behavior","KeyboardArrowUpIcon","lg","DynamicCharts","borderTop"],"sourceRoot":""}