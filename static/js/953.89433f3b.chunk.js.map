{"version":3,"file":"static/js/953.89433f3b.chunk.js","mappings":"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","sources":["pages/Contact/components/ContactList/index.tsx","pages/Contact/components/ContactDetails/index.tsx","pages/Contact/components/CreateContactForm/index.tsx","pages/Contact/components/EmailWindow/index.tsx","pages/Contact/components/NoteDialog/index.tsx","pages/Contact/index.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Checkbox,\n  Chip,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Typography,\n  InputAdornment,\n  Button,\n  Avatar,\n  Tooltip\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Search as SearchIcon,\n  FilterList as FilterListIcon,\n  MoreVert as MoreVertIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon\n} from '@mui/icons-material';\n\ninterface Contact {\n  id: number;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  owner: string;\n  createDate: string;\n  leadStatus: string;\n}\n\ninterface ContactListProps {\n  contacts: Contact[];\n  searchTerm: string;\n  page: number;\n  rowsPerPage: number;\n  selectedContacts: number[];\n  onSearchChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onChangePage: (event: unknown, newPage: number) => void;\n  onChangeRowsPerPage: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onCheckboxClick: (id: number) => void;\n  onOpenCreateDialog: () => void;\n  onOpenContactDrawer: (contact: Contact) => void;\n  getInitials: (firstName: string, lastName: string) => string;\n  isSelected: (id: number) => boolean;\n}\n\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 170 },\n  { id: 'email', label: 'Email', minWidth: 170 },\n  { id: 'phone', label: 'Phone Number', minWidth: 120 },\n  { id: 'owner', label: 'Contact Owner', minWidth: 120 },\n  { id: 'createDate', label: 'Create Date', minWidth: 100 },\n  { id: 'leadStatus', label: 'Lead Status', minWidth: 100 },\n  { id: 'actions', label: 'Actions', minWidth: 80 },\n];\n\nconst ContactList: React.FC<ContactListProps> = ({\n  contacts,\n  searchTerm,\n  page,\n  rowsPerPage,\n  selectedContacts,\n  onSearchChange,\n  onChangePage,\n  onChangeRowsPerPage,\n  onSelectAllClick,\n  onCheckboxClick,\n  onOpenCreateDialog,\n  onOpenContactDrawer,\n  getInitials,\n  isSelected\n}) => {\n  // Filter contacts based on search term\n  const filteredContacts = contacts.filter(contact => \n    contact.firstName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    contact.lastName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    contact.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    contact.phone.includes(searchTerm)\n  );\n\n  return (\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n      <Box p={2} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Typography variant=\"h6\" component=\"div\">\n          Contacts\n          <Typography component=\"span\" color=\"text.secondary\" sx={{ ml: 1 }}>\n            ({filteredContacts.length})\n          </Typography>\n        </Typography>\n        <Box display=\"flex\" gap={1}>\n          <Button \n            variant=\"contained\" \n            startIcon={<AddIcon />}\n            onClick={onOpenCreateDialog}\n          >\n            Create Contact\n          </Button>\n        </Box>\n      </Box>\n      \n      <Box px={2} pb={2} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <TextField\n          placeholder=\"Search contacts...\"\n          size=\"small\"\n          value={searchTerm}\n          onChange={onSearchChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n          sx={{ width: 300 }}\n        />\n        <IconButton>\n          <FilterListIcon />\n        </IconButton>\n      </Box>\n      \n      <TableContainer sx={{ maxHeight: 'calc(100vh - 280px)' }}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  indeterminate={selectedContacts.length > 0 && selectedContacts.length < filteredContacts.length}\n                  checked={filteredContacts.length > 0 && selectedContacts.length === filteredContacts.length}\n                  onChange={onSelectAllClick}\n                />\n              </TableCell>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  style={{ minWidth: column.minWidth }}\n                  sx={{ fontWeight: 'bold' }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredContacts\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((contact) => {\n                const isItemSelected = isSelected(contact.id);\n                \n                return (\n                  <TableRow\n                    hover\n                    role=\"checkbox\"\n                    tabIndex={-1}\n                    key={contact.id}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isItemSelected}\n                        onClick={() => onCheckboxClick(contact.id)}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box display=\"flex\" alignItems=\"center\" sx={{ cursor: 'pointer' }} onClick={() => onOpenContactDrawer(contact)}>\n                        <Avatar sx={{ mr: 2, bgcolor: 'primary.main' }}>\n                          {getInitials(contact.firstName, contact.lastName)}\n                        </Avatar>\n                        <Typography>\n                          {contact.firstName} {contact.lastName}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>{contact.email}</TableCell>\n                    <TableCell>{contact.phone}</TableCell>\n                    <TableCell>{contact.owner}</TableCell>\n                    <TableCell>{contact.createDate}</TableCell>\n                    <TableCell>\n                      <Chip \n                        label={contact.leadStatus} \n                        color={\n                          contact.leadStatus === 'New' ? 'primary' : \n                          contact.leadStatus === 'Qualified' ? 'success' : \n                          'warning'\n                        } \n                        size=\"small\" \n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box display=\"flex\">\n                        <Tooltip title=\"Edit\">\n                          <IconButton size=\"small\">\n                            <EditIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Delete\">\n                          <IconButton size=\"small\">\n                            <DeleteIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"More\">\n                          <IconButton size=\"small\">\n                            <MoreVertIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={filteredContacts.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={onChangePage}\n        onRowsPerPageChange={onChangeRowsPerPage}\n      />\n    </Paper>\n  );\n};\n\nexport default ContactList;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  IconButton,\n  Divider,\n  Chip,\n  Card,\n  CardContent,\n  Tooltip\n} from '@mui/material';\nimport {\n  Close as CloseIcon,\n  Email as EmailIcon,\n  Phone as PhoneIcon,\n  Note as NoteIcon,\n  Event as EventIcon,\n  Assignment as TaskIcon,\n  ExpandMore as ExpandMoreIcon,\n  Edit as EditIcon,\n  ContentCopy as ContentCopyIcon\n} from '@mui/icons-material';\n\ninterface Contact {\n  id: number;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  owner: string;\n  createDate: string;\n  leadStatus: string;\n}\n\ninterface ContactDetailsProps {\n  contact: Contact;\n  onClose: () => void;\n  onOpenEmailWindow: () => void;\n  onOpenNoteDialog: () => void;\n}\n\nconst ContactDetails: React.FC<ContactDetailsProps> = ({\n  contact,\n  onClose,\n  onOpenEmailWindow,\n  onOpenNoteDialog\n}) => {\n  const [hoverName, setHoverName] = useState(false);\n  const [hoverEmail, setHoverEmail] = useState(false);\n  \n  const handleCopyEmail = () => {\n    navigator.clipboard.writeText(contact.email);\n    alert('Email copied to clipboard!');\n  };\n  return (\n    <Box sx={{ fontSize: '0.9rem' }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={1.5}>\n        <Typography variant=\"h6\" sx={{ fontSize: '1.1rem' }}>Contact Details</Typography>\n        <IconButton onClick={onClose} size=\"small\">\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </Box>\n\n      <Box mb={2}>\n        <Box \n          sx={{ display: 'flex', alignItems: 'center' }}\n          onMouseEnter={() => setHoverName(true)}\n          onMouseLeave={() => setHoverName(false)}\n        >\n          <Typography variant=\"h5\" fontWeight=\"bold\" sx={{ fontSize: '1.1rem' }}>\n            {contact.firstName} {contact.lastName}\n          </Typography>\n          {hoverName && (\n            <IconButton size=\"small\" sx={{ ml: 1 }}>\n              <EditIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </Box>\n        <Box \n          sx={{ display: 'flex', alignItems: 'center' }}\n          onMouseEnter={() => setHoverEmail(true)}\n          onMouseLeave={() => setHoverEmail(false)}\n        >\n          <Typography color=\"text.secondary\" sx={{ mb: 0.5, fontSize: '0.85rem' }}>\n            {contact.email}\n          </Typography>\n          {hoverEmail && (\n            <IconButton size=\"small\" sx={{ ml: 1 }} onClick={handleCopyEmail}>\n              <ContentCopyIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </Box>\n        <Box display=\"flex\" gap={0.5} mt={1.5}>\n          <Tooltip title=\"Add Note\">\n            <IconButton color=\"primary\" onClick={onOpenNoteDialog} size=\"small\">\n              <NoteIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Send Email\">\n            <IconButton color=\"primary\" onClick={onOpenEmailWindow} size=\"small\">\n              <EmailIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Call\">\n            <IconButton color=\"primary\" size=\"small\">\n              <PhoneIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Schedule\">\n            <IconButton color=\"primary\" size=\"small\">\n              <EventIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Create Task\">\n            <IconButton color=\"primary\" size=\"small\">\n              <TaskIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n\n      <Divider sx={{ my: 1.5 }} />\n      \n      <Card variant=\"outlined\" sx={{ mb: 1.5 }}>\n        <CardContent sx={{ p: 1.5, '&:last-child': { pb: 1.5 } }}>\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n            <Typography variant=\"subtitle1\" fontWeight=\"bold\" sx={{ fontSize: '0.9rem' }}>\n              About this contact\n            </Typography>\n            <ExpandMoreIcon fontSize=\"small\" />\n          </Box>\n          <Box mt={1.5} sx={{ display: 'flex', flexWrap: 'wrap', gap: 1.5 }}>\n            <Box sx={{ flex: '1 1 calc(50% - 8px)' }}>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.8rem' }}>\n                Phone\n              </Typography>\n              <Typography variant=\"body1\" sx={{ fontSize: '0.85rem' }}>\n                {contact.phone}\n              </Typography>\n            </Box>\n            <Box sx={{ flex: '1 1 calc(50% - 8px)' }}>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.8rem' }}>\n                Lead Status\n              </Typography>\n              <Chip \n                label={contact.leadStatus} \n                color={\n                  contact.leadStatus === 'New' ? 'primary' : \n                  contact.leadStatus === 'Qualified' ? 'success' : \n                  'warning'\n                } \n                size=\"small\" \n                sx={{ height: '20px', '& .MuiChip-label': { fontSize: '0.75rem', px: 1 } }}\n              />\n            </Box>\n            <Box sx={{ flex: '1 1 calc(50% - 8px)' }}>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.8rem' }}>\n                Owner\n              </Typography>\n              <Typography variant=\"body1\" sx={{ fontSize: '0.85rem' }}>\n                {contact.owner}\n              </Typography>\n            </Box>\n            <Box sx={{ flex: '1 1 calc(50% - 8px)' }}>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.8rem' }}>\n                Created\n              </Typography>\n              <Typography variant=\"body1\" sx={{ fontSize: '0.85rem' }}>\n                {contact.createDate}\n              </Typography>\n            </Box>\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Card variant=\"outlined\">\n        <CardContent sx={{ p: 1.5, '&:last-child': { pb: 1.5 } }}>\n          <Typography variant=\"subtitle1\" fontWeight=\"bold\" sx={{ fontSize: '0.9rem' }}>\n            Activity Timeline\n          </Typography>\n          <Box mt={1.5} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height={80}>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.8rem' }}>\n              No activities yet\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default ContactDetails;\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton\n} from '@mui/material';\nimport {\n  Close as CloseIcon\n} from '@mui/icons-material';\n\ninterface CreateContactFormProps {\n  newContact: {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    jobTitle: string;\n    leadStatus: string;\n  };\n  onClose: () => void;\n  onChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n  onLeadStatusChange: (event: any) => void;\n  onSubmit: () => void;\n}\n\nconst CreateContactForm: React.FC<CreateContactFormProps> = ({\n  newContact,\n  onClose,\n  onChange,\n  onLeadStatusChange,\n  onSubmit\n}) => {\n  return (\n    <>\n      <DialogTitle>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          Create New Contact\n          <IconButton onClick={onClose} size=\"small\">\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <Box sx={{ mt: 1, display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n          <Box sx={{ flex: '1 1 calc(50% - 8px)' }}>\n            <TextField\n              name=\"firstName\"\n              label=\"First Name\"\n              fullWidth\n              required\n              value={newContact.firstName}\n              onChange={onChange}\n              autoFocus\n            />\n          </Box>\n          <Box sx={{ flex: '1 1 calc(50% - 8px)' }}>\n            <TextField\n              name=\"lastName\"\n              label=\"Last Name\"\n              fullWidth\n              value={newContact.lastName}\n              onChange={onChange}\n            />\n          </Box>\n          <Box sx={{ width: '100%', mt: 2 }}>\n            <TextField\n              name=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              fullWidth\n              required\n              value={newContact.email}\n              onChange={onChange}\n            />\n          </Box>\n          <Box sx={{ width: '100%', mt: 2 }}>\n            <TextField\n              name=\"phone\"\n              label=\"Phone Number\"\n              fullWidth\n              value={newContact.phone}\n              onChange={onChange}\n            />\n          </Box>\n          <Box sx={{ width: '100%', mt: 2 }}>\n            <TextField\n              name=\"jobTitle\"\n              label=\"Job Title\"\n              fullWidth\n              value={newContact.jobTitle}\n              onChange={onChange}\n            />\n          </Box>\n          <Box sx={{ width: '100%', mt: 2 }}>\n            <FormControl fullWidth>\n              <InputLabel>Lead Status</InputLabel>\n              <Select\n                value={newContact.leadStatus}\n                label=\"Lead Status\"\n                onChange={onLeadStatusChange}\n              >\n                <MenuItem value=\"New\">New</MenuItem>\n                <MenuItem value=\"Contacted\">Contacted</MenuItem>\n                <MenuItem value=\"Qualified\">Qualified</MenuItem>\n                <MenuItem value=\"Lost\">Lost</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </DialogActions>\n    </>\n  );\n};\n\nexport default CreateContactForm;\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  IconButton,\n  Paper,\n  Divider,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  Popover,\n  ButtonGroup\n} from '@mui/material';\nimport {\n  Close as CloseIcon,\n  Minimize as MinimizeIcon,\n  Maximize as MaximizeIcon,\n  ExpandMore as ExpandMoreIcon,\n  Schedule as ScheduleIcon,\n  CalendarToday as CalendarIcon,\n  Launch as LaunchIcon,\n  AttachFile as AttachFileIcon,\n  Image as ImageIcon,\n  Link as LinkIcon,\n  FormatBold as FormatBoldIcon,\n  FormatItalic as FormatItalicIcon,\n  FormatUnderlined as FormatUnderlinedIcon,\n  ArrowDropDown as ArrowDropDownIcon,\n  OpenInFull as OpenInFullIcon,\n  CloseFullscreen as CloseFullscreenIcon,\n  Edit as EditIcon,\n  ContentCopy as ContentCopyIcon\n} from '@mui/icons-material';\n\ninterface EmailWindowProps {\n  open: boolean;\n  onClose: () => void;\n  recipientEmail?: string;\n  fromContactDetails?: boolean;\n}\n\nconst EmailWindow: React.FC<EmailWindowProps> = ({ open, onClose, recipientEmail = '', fromContactDetails = false }) => {\n  // Default position in the center of the screen\n  const defaultPosition = { x: window.innerWidth / 2 - 375, y: window.innerHeight / 2 - 300 };\n  const [position, setPosition] = useState(defaultPosition);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [isMaximized, setIsMaximized] = useState(false);\n  const [showSendOptions, setShowSendOptions] = useState(false);\n  const [sendLaterSelected, setSendLaterSelected] = useState(false);\n  \n  // Gmail integration and email state\n  const [emailSubject, setEmailSubject] = useState('');\n  const [emailBody, setEmailBody] = useState('');\n  const [emailTo, setEmailTo] = useState(recipientEmail || '');\n  // Set from contact details based on prop\n  useEffect(() => {\n    if (open) {\n      // Always position at the bottom right corner like Gmail\n      // Adjust for Contact Details panel if needed\n      let rightOffset = 20; // Default right margin\n      \n      if (fromContactDetails) {\n        // If opened from contact details, adjust position to avoid overlap\n        const contactDetailsWidth = 400; // Approximate width of contact details\n        rightOffset = contactDetailsWidth + 20; // Position to the left of contact details\n      }\n      \n      // Position at the very bottom of the screen\n      // For Gmail-like behavior, we want it flush with the bottom\n      const bottomPosition = window.innerHeight - (isMinimized ? 48 : 600);\n      const rightPosition = window.innerWidth - 750 - rightOffset;\n      \n      setPosition({ \n        x: Math.max(20, rightPosition),\n        y: bottomPosition\n      });\n    }\n    \n    // Update recipient when prop changes\n    if (recipientEmail) {\n      setEmailTo(recipientEmail);\n    }\n  }, [open, fromContactDetails, recipientEmail, isMinimized]);\n  // We only need sendLaterAnchorEl for the Send Later popover\n  const [sendLaterAnchorEl, setSendLaterAnchorEl] = useState<null | HTMLElement>(null);\n  const [sendLaterOption, setSendLaterOption] = useState('1hour');\n  const [customDate, setCustomDate] = useState(new Date().toISOString().split('T')[0]);\n  const [customTime, setCustomTime] = useState('16:30');\n  const windowRef = useRef<HTMLDivElement>(null);\n\n  // Handle drag start\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (isMaximized) return;\n    \n    if (windowRef.current && e.target === e.currentTarget) {\n      setIsDragging(true);\n      const rect = windowRef.current.getBoundingClientRect();\n      setDragOffset({\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top\n      });\n    }\n  };\n\n  // Handle dragging\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      if (isDragging && !isMaximized) {\n        setPosition({\n          x: e.clientX - dragOffset.x,\n          y: e.clientY - dragOffset.y\n        });\n      }\n    };\n\n    const handleMouseUp = () => {\n      setIsDragging(false);\n    };\n\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, dragOffset, isMaximized]);\n\n  // Handle maximize/restore window\n  const handleMaximize = () => {\n    setIsMaximized(!isMaximized);\n    setIsMinimized(false);\n  };\n  \n  // Function to handle temporary window detach (launch in new window)\n  const handleDetach = () => {\n    // Instead of creating a popup, navigate to a new route with the email data\n    // We'll simulate this by opening a new tab with a URL that would handle this\n    // In a real application, you would use React Router navigation\n    \n    // Create a URL with query parameters for the email data\n    const emailParams = new URLSearchParams({\n      to: emailTo,\n      subject: emailSubject,\n      body: emailBody\n    }).toString();\n    \n    // Open a new tab with the email compose route\n    window.open(`/email/compose?${emailParams}`, '_blank');\n    \n    // Close the current email window\n    onClose();\n  };\n\n  // Handle send actions with Gmail integration\n  const handleSendNow = () => {\n    if (!emailTo) {\n      alert('Please enter a recipient email address');\n      return;\n    }\n    \n    // Logic to send email via Gmail\n    const mailtoLink = `mailto:${emailTo}?subject=${encodeURIComponent(emailSubject)}&body=${encodeURIComponent(emailBody)}`;\n    \n    // Open the default mail client\n    window.open(mailtoLink, '_blank');\n    \n    // Reset modal to minimized state after sending email\n    setIsMaximized(false);\n    setIsMinimized(true);\n    \n    console.log('Sending email now');\n    alert('Email opened in your default mail client!');\n    onClose();\n  };\n\n  // Send options and Send Later functionality\n  const handleSendOptionsClick = (event: React.MouseEvent<HTMLElement>) => {\n    setShowSendOptions(true);\n    setSendLaterAnchorEl(event.currentTarget);\n  };\n\n  const handleSendOptionsClose = () => {\n    setShowSendOptions(false);\n    setSendLaterAnchorEl(null);\n  };\n  \n  const handleSendLaterClick = () => {\n    setSendLaterSelected(true);\n    setShowSendOptions(false);\n  };\n\n  const handleSendLaterOptionsClick = (event: React.MouseEvent<HTMLElement>) => {\n    setSendLaterAnchorEl(event.currentTarget);\n  };\n\n  const handleSendLaterClose = () => {\n    setSendLaterAnchorEl(null);\n  };\n\n  const handleSendLaterOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSendLaterOption(event.target.value);\n  };\n\n  const handleScheduleSend = () => {\n    // Logic to schedule email\n    let scheduledTime = '';\n    \n    switch(sendLaterOption) {\n      case '1hour':\n        scheduledTime = 'in 1 hour';\n        break;\n      case '2hours':\n        scheduledTime = 'in 2 hours';\n        break;\n      case 'tomorrow_morning':\n        scheduledTime = 'tomorrow morning (8am)';\n        break;\n      case 'tomorrow_afternoon':\n        scheduledTime = 'tomorrow afternoon (1pm)';\n        break;\n      case 'custom':\n        scheduledTime = `on ${customDate} at ${customTime}`;\n        break;\n    }\n    \n    console.log(`Email scheduled to be sent ${sendLaterOption === 'custom' ? `on ${customDate} at ${customTime}` : `with option: ${sendLaterOption}`}`);\n    \n    // Reset modal to minimized state after scheduling email\n    setIsMaximized(false);\n    setIsMinimized(true);\n    \n    handleSendLaterClose();\n    // Don't close the modal completely, just minimize it\n    // onClose();\n  };\n\n  if (!open) return null;\n\n  return (\n    <>\n      {/* Overlay mờ chỉ khi modal được mở rộng (maximize) */}\n      {open && isMaximized && (\n        <Box\n          sx={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            zIndex: 1100,\n          }}\n        />\n      )}\n      <Paper\n      ref={windowRef}\n      sx={{\n        position: 'fixed',\n        // Khi mở rộng: căn giữa màn hình, khi thu nhỏ: nằm dưới cùng\n        top: isMaximized ? '50%' : 'auto',\n        left: isMaximized ? '50%' : position.x,\n        bottom: isMaximized ? 'auto' : '20px',\n        // Dịch chuyển ngược lại 50% kích thước của chính nó để căn giữa\n        transform: isMaximized ? 'translate(-50%, -50%)' : 'none',\n        // Điều chỉnh kích thước\n        width: isMaximized ? '900px' : '550px',\n        maxWidth: isMaximized ? '1200px' : '550px',\n        // Các style khác giữ nguyên\n        display: 'flex',\n        flexDirection: 'column',\n        boxShadow: isMinimized ? 1 : 3,\n        zIndex: 1200,\n        visibility: open ? 'visible' : 'hidden',\n        opacity: open ? 1 : 0,\n        transition: 'all 0.3s ease',\n        overflow: 'hidden',\n        maxHeight: isMaximized ? '600px' : '450px',\n        height: isMinimized ? '48px' : 'auto',\n        borderTopLeftRadius: '8px',\n        borderTopRightRadius: '8px',\n        borderBottomLeftRadius: isMinimized ? '0px' : '8px',\n        borderBottomRightRadius: isMinimized ? '0px' : '8px',\n        // Responsive\n        '@media (min-width: 1800px)': {\n          width: isMaximized ? '1100px' : '550px',\n          maxWidth: isMaximized ? '1200px' : '550px',\n          maxHeight: isMaximized ? '650px' : '450px',\n        },\n        '@media (min-width: 1600px)': {\n          width: isMaximized ? '1000px' : '550px',\n          maxHeight: isMaximized ? '600px' : '450px',\n        },\n        '@media (max-width: 1400px)': {\n          width: isMaximized ? '800px' : '550px',\n        },\n        '@media (max-width: 1200px)': {\n          width: isMaximized ? '700px' : '500px',\n        },\n        '@media (max-width: 992px)': {\n          width: isMaximized ? '650px' : '450px',\n        }\n      }}\n    >\n      {/* Window header/title bar - Orange theme style */}\n      <Box\n        sx={{\n          bgcolor: '#ff7a59', // Orange HubSpot theme color\n          p: 1,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          cursor: 'move',\n          userSelect: 'none',\n          color: 'white',\n          borderTopLeftRadius: '8px',\n          borderTopRightRadius: '8px',\n          '@media (min-width: 1600px)': {\n            width: '100%',\n          },\n          '@media (max-width: 1200px)': {\n            width: isMaximized ? 'calc(100% - 420px)' : '600px',\n          },\n          '@media (max-width: 900px)': {\n            width: isMaximized ? '100%' : '100%',\n            right: '0',\n            bottom: '0',\n            borderRadius: 0\n          }\n        }}\n        onMouseDown={handleMouseDown}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          <IconButton size=\"small\" sx={{ color: 'white', mr: 1 }} onClick={() => setIsMinimized(!isMinimized)}>\n            {isMinimized ? <ExpandMoreIcon fontSize=\"small\" /> : <MinimizeIcon fontSize=\"small\" />}\n          </IconButton>\n          <Typography variant=\"subtitle1\" fontWeight=\"medium\">\n            New Email\n          </Typography>\n        </Box>\n        <Box>\n          <IconButton size=\"small\" sx={{ color: 'white' }} onClick={handleDetach}>\n            <LaunchIcon fontSize=\"small\" />\n          </IconButton>\n          <IconButton size=\"small\" sx={{ color: 'white' }} onClick={handleMaximize}>\n            {isMaximized ? <CloseFullscreenIcon fontSize=\"small\" /> : <OpenInFullIcon fontSize=\"small\" />}\n          </IconButton>\n          <IconButton size=\"small\" sx={{ color: 'white' }} onClick={onClose}>\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        </Box>\n      </Box>\n\n      {/* Email content */}\n      {!isMinimized && (\n        <Box sx={{ p: 0, flexGrow: 1, display: 'flex', flexDirection: 'column', overflow: 'hidden' }}>\n          {/* Gmail/HubSpot style tabs - Orange theme */}\n          <Box sx={{ bgcolor: '#f5f5f5', borderBottom: '1px solid #ddd' }}>\n            <Box sx={{ display: 'flex', px: 2, py: 0.5 }}>\n              <Typography sx={{ mr: 2, fontWeight: 'bold', fontSize: '13px', color: '#ff7a59' }}>Templates</Typography>\n              <Typography sx={{ mr: 2, fontSize: '13px', display: 'flex', alignItems: 'center' }}>\n                Sequences <Box component=\"span\" sx={{ ml: 0.5, fontSize: '14px' }}>🔒</Box>\n              </Typography>\n              <Typography sx={{ mr: 2, fontSize: '13px' }}>Documents</Typography>\n              <Typography sx={{ mr: 2, fontSize: '13px', display: 'flex', alignItems: 'center' }}>\n                Meetings <ExpandMoreIcon fontSize=\"small\" />\n              </Typography>\n              <Typography sx={{ fontSize: '13px', display: 'flex', alignItems: 'center' }}>\n                Quotes <ExpandMoreIcon fontSize=\"small\" />\n              </Typography>\n            </Box>\n          </Box>\n          \n          {/* Email form fields - Simplified with underlines instead of boxes */}\n          <Box sx={{ p: 1.5 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\n              <Typography sx={{ width: 30, fontSize: '13px', mr: 2 }}>To</Typography>\n              <TextField\n                fullWidth\n                value={emailTo}\n                onChange={(e) => setEmailTo(e.target.value)}\n                size=\"small\"\n                variant=\"standard\"\n                placeholder=\"recipient@example.com\"\n                sx={{ '& .MuiInputBase-input': { fontSize: '13px' } }}\n              />\n            </Box>\n            \n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\n              <Typography sx={{ width: 30, fontSize: '13px', mr: 2 }}>From</Typography>\n              <Box sx={{ display: 'flex', alignItems: 'center', flexGrow: 1 }}>\n                <Typography sx={{ fontSize: '13px' }}>\n                  Tô Thế Mẫn <Typography component=\"span\" sx={{ color: 'text.secondary', fontSize: '13px' }}>(totheman2@gmail.com)</Typography>\n                </Typography>\n              </Box>\n              <Typography sx={{ fontSize: '13px', color: '#ff7a59', ml: 2, cursor: 'pointer' }}>Cc</Typography>\n              <Typography sx={{ fontSize: '13px', color: '#ff7a59', ml: 2, cursor: 'pointer' }}>Bcc</Typography>\n            </Box>\n            \n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\n              <Typography sx={{ width: 30, fontSize: '13px', mr: 2}}>Subject</Typography>\n              <TextField\n                fullWidth\n                size=\"small\"\n                variant=\"standard\"\n                placeholder=\"Email subject\"\n                value={emailSubject}\n                onChange={(e) => setEmailSubject(e.target.value)}\n                sx={{ '& .MuiInputBase-input': { fontSize: '13px' } }}\n              />\n            </Box>\n          </Box>\n          \n          <Divider />\n          \n          {/* Message body - Only this area should scroll */}\n          <Box sx={{ p: 1.5, flexGrow: 1, display: 'flex', flexDirection: 'column', overflow: 'auto', maxHeight: isMaximized ? '400px' : '200px', '@media (min-width: 1600px)': { maxHeight: isMaximized ? '450px' : '200px' } }}>\n            <TextField\n              multiline\n              placeholder=\"Type your message here...\"\n              minRows={3}\n              maxRows={isMaximized ? 15 : 8}\n              fullWidth\n              variant=\"standard\"\n              value={emailBody}\n              onChange={(e) => setEmailBody(e.target.value)}\n              InputProps={{\n                disableUnderline: true,\n                sx: { p: 0 }\n              }}\n              sx={{ \n                flexGrow: 1,\n                '& .MuiInputBase-root': {\n                  height: 'auto',\n                  alignItems: 'flex-start',\n                  fontSize: '13px'\n                },\n                '& .MuiInputBase-input': {\n                  overflow: 'auto',\n                  fontSize: '13px'\n                }\n              }}\n            />\n            \n            <Divider sx={{ my: 1 }} />\n\n            {/* Formatting toolbar - with functional buttons */}\n            <Box sx={{ display: 'flex', alignItems: 'center', borderTop: '1px solid #ddd', pt: 0.5, flexShrink: 0 }}>\n              <IconButton size=\"small\" onClick={() => {\n                const textarea = document.querySelector('textarea');\n                if (textarea) {\n                  const start = textarea.selectionStart;\n                  const end = textarea.selectionEnd;\n                  const selectedText = emailBody.substring(start, end);\n                  const newText = emailBody.substring(0, start) + `<b>${selectedText}</b>` + emailBody.substring(end);\n                  setEmailBody(newText);\n                } else {\n                  setEmailBody(prev => `<b>${prev}</b>`);\n                }\n              }}><FormatBoldIcon fontSize=\"small\" /></IconButton>\n              <IconButton size=\"small\" onClick={() => {\n                const textarea = document.querySelector('textarea');\n                if (textarea) {\n                  const start = textarea.selectionStart;\n                  const end = textarea.selectionEnd;\n                  const selectedText = emailBody.substring(start, end);\n                  const newText = emailBody.substring(0, start) + `<i>${selectedText}</i>` + emailBody.substring(end);\n                  setEmailBody(newText);\n                } else {\n                  setEmailBody(prev => `<i>${prev}</i>`);\n                }\n              }}><FormatItalicIcon fontSize=\"small\" /></IconButton>\n              <IconButton size=\"small\" onClick={() => {\n                const textarea = document.querySelector('textarea');\n                if (textarea) {\n                  const start = textarea.selectionStart;\n                  const end = textarea.selectionEnd;\n                  const selectedText = emailBody.substring(start, end);\n                  const newText = emailBody.substring(0, start) + `<u>${selectedText}</u>` + emailBody.substring(end);\n                  setEmailBody(newText);\n                } else {\n                  setEmailBody(prev => `<u>${prev}</u>`);\n                }\n              }}><FormatUnderlinedIcon fontSize=\"small\" /></IconButton>\n              <Typography sx={{ fontSize: '12px', color: '#ff7a59', mx: 1, cursor: 'pointer' }}>More</Typography>\n              <IconButton size=\"small\" onClick={() => {\n                alert('Attach file functionality would be implemented here');\n              }}><AttachFileIcon fontSize=\"small\" /></IconButton>\n              <IconButton size=\"small\" onClick={() => {\n                alert('Insert image functionality would be implemented here');\n              }}><ImageIcon fontSize=\"small\" /></IconButton>\n              <Typography sx={{ fontSize: '12px', color: '#ff7a59', mx: 1, cursor: 'pointer' }}>Insert</Typography>\n              <IconButton size=\"small\" onClick={() => {\n                const url = prompt('Enter URL:');\n                if (url) {\n                  const textarea = document.querySelector('textarea');\n                  if (textarea) {\n                    const start = textarea.selectionStart;\n                    const end = textarea.selectionEnd;\n                    const selectedText = emailBody.substring(start, end);\n                    const linkText = selectedText || url;\n                    const newText = emailBody.substring(0, start) + \n                      `<a href=\"${url}\">${linkText}</a>` + \n                      emailBody.substring(end);\n                    setEmailBody(newText);\n                  } else {\n                    setEmailBody(prev => `${prev} <a href=\"${url}\">${url}</a>`);\n                  }\n                }\n              }}><LinkIcon fontSize=\"small\" /></IconButton>\n              \n              <Box sx={{ flexGrow: 1 }} />\n              \n              <Typography sx={{ fontSize: '12px', color: '#ff7a59', display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\n                Associated with 1 record <ExpandMoreIcon fontSize=\"small\" />\n              </Typography>\n            </Box>\n          </Box>\n          \n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', p: 1, borderTop: '1px solid #ddd' }}>\n            <ButtonGroup variant=\"contained\" sx={{ bgcolor: '#ff7a59', '& .MuiButton-contained': { bgcolor: '#ff7a59', '&:hover': { bgcolor: '#ff5c33' } } }}>\n              <Button\n                onClick={sendLaterSelected ? handleSendLaterOptionsClick : handleSendNow}\n                sx={{\n                  borderTopRightRadius: 0,\n                  borderBottomRightRadius: 0,\n                  bgcolor: '#ff7a59',\n                  '&:hover': {\n                    bgcolor: '#ff5c33',\n                  }\n                }}\n              >\n                {sendLaterSelected ? 'Send Later' : 'Send'}\n              </Button>\n              <Button\n                onClick={handleSendOptionsClick}\n                sx={{\n                  borderTopLeftRadius: 0,\n                  borderBottomLeftRadius: 0,\n                  bgcolor: '#ff7a59',\n                  '&:hover': {\n                    bgcolor: '#ff5c33',\n                  },\n                  minWidth: '30px',\n                  width: '30px'\n                }}\n              >\n                <ExpandMoreIcon />\n              </Button>\n            </ButtonGroup>\n            \n            {/* Send Options Popover */}\n            <Popover\n              open={Boolean(sendLaterAnchorEl) && showSendOptions}\n              anchorEl={sendLaterAnchorEl}\n              onClose={handleSendOptionsClose}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              PaperProps={{\n                sx: { width: 200, p: 1 }\n              }}\n            >\n              <MenuItem onClick={handleSendNow} sx={{ py: 1 }}>\n                Send Now\n              </MenuItem>\n              <MenuItem onClick={handleSendLaterClick} sx={{ py: 1 }}>\n                Send Later\n              </MenuItem>\n            </Popover>\n            \n            {/* Send Later Options Popover */}\n            <Popover\n              open={Boolean(sendLaterAnchorEl) && !showSendOptions && sendLaterSelected}\n              anchorEl={sendLaterAnchorEl}\n              onClose={handleSendLaterClose}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              PaperProps={{\n                sx: { width: 300, p: 2 }\n              }}\n            >\n              <Typography variant=\"subtitle1\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n                Send later\n              </Typography>\n              <FormControl component=\"fieldset\">\n                <RadioGroup\n                  value={sendLaterOption}\n                  onChange={handleSendLaterOptionChange}\n                >\n                  <FormControlLabel value=\"1hour\" control={<Radio />} label=\"In 1 hour\" />\n                  <FormControlLabel value=\"2hours\" control={<Radio />} label=\"In 2 hours\" />\n                  <FormControlLabel value=\"tomorrow_morning\" control={<Radio />} label=\"Tomorrow morning (8am)\" />\n                  <FormControlLabel value=\"tomorrow_afternoon\" control={<Radio />} label=\"Tomorrow afternoon (1pm)\" />\n                  <FormControlLabel value=\"custom\" control={<Radio />} label=\"Custom\" />\n                </RadioGroup>\n              </FormControl>\n              \n              {sendLaterOption === 'custom' && (\n                <Box sx={{ display: 'flex', gap: 2, mt: 2, mb: 2 }}>\n                  <TextField\n                    type=\"date\"\n                    size=\"small\"\n                    value={customDate}\n                    onChange={(e) => setCustomDate(e.target.value)}\n                    InputProps={{\n                      startAdornment: <CalendarIcon fontSize=\"small\" sx={{ mr: 1, color: 'text.secondary' }} />\n                    }}\n                    sx={{ flex: 1 }}\n                  />\n                  <TextField\n                    type=\"time\"\n                    size=\"small\"\n                    value={customTime}\n                    onChange={(e) => setCustomTime(e.target.value)}\n                    sx={{ width: '120px' }}\n                  />\n                </Box>\n              )}\n              \n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n                <Button\n                  variant=\"contained\"\n                  onClick={handleScheduleSend}\n                  sx={{\n                    bgcolor: '#ff7a59',\n                    '&:hover': {\n                      bgcolor: '#ff5c33',\n                    }\n                  }}\n                >\n                  Schedule\n                </Button>\n                <Button variant=\"outlined\" onClick={handleSendLaterClose}>\n                  Cancel\n                </Button>\n              </Box>\n            </Popover>\n          </Box>\n        </Box>\n      )}\n    </Paper>\n    </>\n  );\n};\n\nexport default EmailWindow;\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  Box,\n  IconButton\n} from '@mui/material';\nimport {\n  Close as CloseIcon\n} from '@mui/icons-material';\n\ninterface NoteDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst NoteDialog: React.FC<NoteDialogProps> = ({ open, onClose }) => {\n  return (\n    <Dialog \n      open={open} \n      onClose={onClose}\n      fullWidth\n      maxWidth=\"sm\"\n    >\n      <DialogTitle>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          Add Note\n          <IconButton onClick={onClose} size=\"small\">\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"note\"\n          label=\"Note\"\n          multiline\n          rows={4}\n          fullWidth\n          variant=\"outlined\"\n        />\n        <Button\n          variant=\"outlined\"\n          component=\"label\"\n          sx={{ mt: 2 }}\n        >\n          Attach File\n          <input\n            type=\"file\"\n            hidden\n          />\n        </Button>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button onClick={onClose} variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default NoteDialog;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Dialog,\n  Drawer,\n  Typography\n} from '@mui/material';\nimport {\n  FileUpload as FileUploadIcon\n} from '@mui/icons-material';\n\n// Import custom components\nimport ContactList from './components/ContactList';\nimport ContactDetails from './components/ContactDetails';\nimport CreateContactForm from './components/CreateContactForm';\nimport EmailWindow from './components/EmailWindow';\nimport NoteDialog from './components/NoteDialog';\n\n// Mock data for contacts\nconst mockContacts = [\n  {\n    id: 1,\n    firstName: 'Nguyễn',\n    lastName: 'Văn A',\n    email: 'nguyenvana@example.com',\n    phone: '0901234567',\n    owner: 'Admin User',\n    createDate: '2023-07-15',\n    leadStatus: 'New'\n  },\n  {\n    id: 2,\n    firstName: 'Trần',\n    lastName: 'Thị B',\n    email: 'tranthib@example.com',\n    phone: '0912345678',\n    owner: 'Sales Rep',\n    createDate: '2023-07-10',\n    leadStatus: 'Qualified'\n  },\n  {\n    id: 3,\n    firstName: 'Lê',\n    lastName: 'Văn C',\n    email: 'levanc@example.com',\n    phone: '0923456789',\n    owner: 'Admin User',\n    createDate: '2023-07-05',\n    leadStatus: 'Contacted'\n  },\n  {\n    id: 4,\n    firstName: 'Phạm',\n    lastName: 'Thị D',\n    email: 'phamthid@example.com',\n    phone: '0934567890',\n    owner: 'Sales Rep',\n    createDate: '2023-06-30',\n    leadStatus: 'New'\n  },\n  {\n    id: 5,\n    firstName: 'Hoàng',\n    lastName: 'Văn E',\n    email: 'hoangvane@example.com',\n    phone: '0945678901',\n    owner: 'Admin User',\n    createDate: '2023-06-25',\n    leadStatus: 'Qualified'\n  },\n];\n\n// Column definitions\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 170 },\n  { id: 'email', label: 'Email', minWidth: 170 },\n  { id: 'phone', label: 'Phone Number', minWidth: 120 },\n  { id: 'owner', label: 'Contact Owner', minWidth: 120 },\n  { id: 'createDate', label: 'Create Date', minWidth: 100 },\n  { id: 'leadStatus', label: 'Lead Status', minWidth: 100 },\n  { id: 'actions', label: 'Actions', minWidth: 80 },\n];\n\nconst ContactManagement: React.FC = () => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedContacts, setSelectedContacts] = useState<number[]>([]);\n  const [openCreateDialog, setOpenCreateDialog] = useState(false);\n  const [openContactDrawer, setOpenContactDrawer] = useState(false);\n  const [selectedContact, setSelectedContact] = useState<any>(null);\n  const [openNoteDialog, setOpenNoteDialog] = useState(false);\n  const [openEmailWindow, setOpenEmailWindow] = useState(false);\n  const [newContact, setNewContact] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    jobTitle: '',\n    leadStatus: 'New'\n  });\n\n  // Handle pagination\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  // Handle search\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n    setPage(0);\n  };\n\n  // Handle checkbox selection\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = filteredContacts.map((n) => n.id);\n      setSelectedContacts(newSelected);\n      return;\n    }\n    setSelectedContacts([]);\n  };\n\n  const handleCheckboxClick = (id: number) => {\n    const selectedIndex = selectedContacts.indexOf(id);\n    let newSelected: number[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selectedContacts, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selectedContacts.slice(1));\n    } else if (selectedIndex === selectedContacts.length - 1) {\n      newSelected = newSelected.concat(selectedContacts.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selectedContacts.slice(0, selectedIndex),\n        selectedContacts.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelectedContacts(newSelected);\n  };\n\n  const isSelected = (id: number) => selectedContacts.indexOf(id) !== -1;\n\n  // Handle create contact dialog\n  const handleOpenCreateDialog = () => {\n    setOpenCreateDialog(true);\n  };\n\n  const handleCloseCreateDialog = () => {\n    setOpenCreateDialog(false);\n    setNewContact({\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      jobTitle: '',\n      leadStatus: 'New'\n    });\n  };\n\n  const handleCreateContactChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setNewContact({\n      ...newContact,\n      [name]: value\n    });\n  };\n\n  const handleLeadStatusChange = (event: any) => {\n    setNewContact({\n      ...newContact,\n      leadStatus: event.target.value\n    });\n  };\n\n  const handleCreateContact = () => {\n    // In a real app, this would send data to an API\n    console.log('Creating contact:', newContact);\n    handleCloseCreateDialog();\n    // Show success notification (would use a proper notification system in a real app)\n    alert('✅ Contact created successfully!');\n  };\n\n  // Handle contact drawer\n  const handleOpenContactDrawer = (contact: any) => {\n    setSelectedContact(contact);\n    setOpenContactDrawer(true);\n  };\n\n  const handleCloseContactDrawer = () => {\n    setOpenContactDrawer(false);\n  };\n\n  // Handle note dialog\n  const handleOpenNoteDialog = () => {\n    setOpenNoteDialog(true);\n  };\n\n  const handleCloseNoteDialog = () => {\n    setOpenNoteDialog(false);\n  };\n\n  // Handle email window\n  const handleOpenEmailWindow = () => {\n    setOpenEmailWindow(true);\n  };\n\n  const handleCloseEmailWindow = () => {\n    setOpenEmailWindow(false);\n  };\n\n  // Filter contacts based on search term\n  const filteredContacts = mockContacts.filter((contact) => {\n    const fullName = `${contact.firstName} ${contact.lastName}`.toLowerCase();\n    return (\n      fullName.includes(searchTerm.toLowerCase()) ||\n      contact.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      contact.phone.includes(searchTerm)\n    );\n  });\n\n  // Get initials for avatar\n  const getInitials = (firstName: string, lastName: string) => {\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`;\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      {/* Contact List */}\n      <ContactList\n        contacts={mockContacts}\n        searchTerm={searchTerm}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        selectedContacts={selectedContacts}\n        onSearchChange={handleSearchChange}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n        onSelectAllClick={handleSelectAllClick}\n        onCheckboxClick={handleCheckboxClick}\n        onOpenCreateDialog={handleOpenCreateDialog}\n        onOpenContactDrawer={handleOpenContactDrawer}\n        getInitials={getInitials}\n        isSelected={isSelected}\n      />\n\n      {/* Create Contact Dialog */}\n      <Dialog\n        open={openCreateDialog}\n        onClose={handleCloseCreateDialog}\n        fullWidth\n        maxWidth=\"sm\"\n      >\n        <CreateContactForm\n          newContact={newContact}\n          onClose={handleCloseCreateDialog}\n          onChange={handleCreateContactChange}\n          onLeadStatusChange={handleLeadStatusChange}\n          onSubmit={handleCreateContact}\n        />\n      </Dialog>\n\n      {/* Contact Preview Drawer */}\n      <Drawer\n        anchor=\"right\"\n        open={openContactDrawer}\n        onClose={(_, reason) => {\n          // Only close when explicitly clicking the backdrop (not when interacting with email window)\n          if (reason === 'backdropClick') {\n            const emailWindow = document.querySelector('.email-window');\n            // If clicking on email window, don't close the drawer\n            if (emailWindow && emailWindow.contains(document.activeElement)) {\n              return;\n            }\n          }\n          handleCloseContactDrawer();\n        }}\n        ModalProps={{\n          BackdropProps: {\n            sx: { backgroundColor: 'transparent' }\n          }\n        }}\n        sx={{\n          '& .MuiDrawer-paper': { \n            width: { xs: '100%', sm: 500 },\n            p: 2\n          },\n        }}\n      >\n        {selectedContact && (\n          <ContactDetails\n            contact={selectedContact}\n            onClose={handleCloseContactDrawer}\n            onOpenEmailWindow={handleOpenEmailWindow}\n            onOpenNoteDialog={handleOpenNoteDialog}\n          />\n        )}\n      </Drawer>\n\n      {/* Note Dialog */}\n      <NoteDialog \n        open={openNoteDialog} \n        onClose={handleCloseNoteDialog}\n      />\n\n      {/* Email Window (Draggable) */}\n      <EmailWindow\n        open={openEmailWindow}\n        onClose={handleCloseEmailWindow}\n        recipientEmail={selectedContact?.email || ''}\n        fromContactDetails={true}\n      />\n    </Box>\n  );\n};\n\nexport default ContactManagement;\n"],"names":["columns","id","label","minWidth","_ref","contacts","searchTerm","page","rowsPerPage","selectedContacts","onSearchChange","onChangePage","onChangeRowsPerPage","onSelectAllClick","onCheckboxClick","onOpenCreateDialog","onOpenContactDrawer","getInitials","isSelected","filteredContacts","filter","contact","firstName","toLowerCase","includes","lastName","email","phone","_jsxs","Paper","sx","width","overflow","children","Box","p","display","justifyContent","alignItems","Typography","variant","component","color","ml","length","_jsx","gap","Button","startIcon","AddIcon","onClick","px","pb","TextField","placeholder","size","value","onChange","InputProps","startAdornment","InputAdornment","position","SearchIcon","IconButton","FilterListIcon","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","map","column","style","fontWeight","TableBody","slice","isItemSelected","hover","role","tabIndex","selected","cursor","Avatar","mr","bgcolor","owner","createDate","Chip","leadStatus","Tooltip","title","EditIcon","fontSize","DeleteIcon","MoreVertIcon","TablePagination","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","onClose","onOpenEmailWindow","onOpenNoteDialog","hoverName","setHoverName","useState","hoverEmail","setHoverEmail","mb","CloseIcon","onMouseEnter","onMouseLeave","handleCopyEmail","navigator","clipboard","writeText","alert","ContentCopyIcon","mt","NoteIcon","EmailIcon","PhoneIcon","EventIcon","TaskIcon","Divider","my","Card","CardContent","ExpandMoreIcon","flexWrap","flex","height","newContact","onLeadStatusChange","onSubmit","_Fragment","DialogTitle","DialogContent","name","fullWidth","required","autoFocus","type","jobTitle","FormControl","InputLabel","Select","MenuItem","DialogActions","open","recipientEmail","fromContactDetails","defaultPosition","x","window","innerWidth","y","innerHeight","setPosition","isDragging","setIsDragging","dragOffset","setDragOffset","isMinimized","setIsMinimized","isMaximized","setIsMaximized","showSendOptions","setShowSendOptions","sendLaterSelected","setSendLaterSelected","emailSubject","setEmailSubject","emailBody","setEmailBody","emailTo","setEmailTo","useEffect","rightOffset","bottomPosition","rightPosition","Math","max","sendLaterAnchorEl","setSendLaterAnchorEl","sendLaterOption","setSendLaterOption","customDate","setCustomDate","Date","toISOString","split","customTime","setCustomTime","windowRef","useRef","handleMouseMove","e","clientX","clientY","handleMouseUp","document","addEventListener","removeEventListener","handleSendNow","mailtoLink","concat","encodeURIComponent","console","log","handleSendLaterClose","top","left","right","bottom","backgroundColor","zIndex","ref","transform","maxWidth","flexDirection","boxShadow","visibility","opacity","transition","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","userSelect","borderRadius","onMouseDown","current","target","currentTarget","rect","getBoundingClientRect","MinimizeIcon","handleDetach","emailParams","URLSearchParams","to","subject","body","toString","LaunchIcon","handleMaximize","CloseFullscreenIcon","OpenInFullIcon","flexGrow","borderBottom","py","multiline","minRows","maxRows","disableUnderline","borderTop","pt","flexShrink","textarea","querySelector","start","selectionStart","end","selectionEnd","selectedText","substring","newText","prev","FormatBoldIcon","FormatItalicIcon","FormatUnderlinedIcon","mx","AttachFileIcon","ImageIcon","url","prompt","linkText","LinkIcon","ButtonGroup","event","Popover","Boolean","anchorEl","handleSendOptionsClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","handleSendLaterClick","RadioGroup","FormControlLabel","control","Radio","CalendarIcon","handleScheduleSend","scheduledTime","Dialog","margin","rows","hidden","mockContacts","ContactManagement","setPage","setRowsPerPage","setSearchTerm","setSelectedContacts","openCreateDialog","setOpenCreateDialog","openContactDrawer","setOpenContactDrawer","selectedContact","setSelectedContact","openNoteDialog","setOpenNoteDialog","openEmailWindow","setOpenEmailWindow","setNewContact","handleCloseCreateDialog","handleCloseContactDrawer","ContactList","handleChangePage","newPage","newSelected","n","selectedIndex","indexOf","handleOpenCreateDialog","charAt","CreateContactForm","_objectSpread","handleCreateContact","Drawer","anchor","_","reason","emailWindow","contains","activeElement","ModalProps","BackdropProps","xs","sm","ContactDetails","handleOpenEmailWindow","handleOpenNoteDialog","NoteDialog","handleCloseNoteDialog","EmailWindow","handleCloseEmailWindow"],"sourceRoot":""}